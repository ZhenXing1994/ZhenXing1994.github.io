<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Monitor和Lock区别</title>
    <url>/posts/9d3dd46f/</url>
    <content><![CDATA[<p>Lock和Monitor没区别，简单来讲Lock是Monitor的进一步封装<br>锁定的目的：由于多个线程并行/并发处理同一个“数据对象”（比如：在其它线程的某个地方发生了Clear、Add、Remove、Change等操作），导致“数据对象”不断变化，没法用了，所以，为了保证数据在某个计算时刻的“恒定”，使用排它锁将“数据对象”锁定，然后就视该“数据对象”为“一个恒定量”进行逻辑处理。</p>
<a id="more"></a>

<h1 id="1-代码使用"><a href="#1-代码使用" class="headerlink" title="1.代码使用"></a>1.代码使用</h1><table>
<thead>
<tr>
<th align="left">Lock</th>
<th>Monitor</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Lock(obj)<br>{<br>执行任务<br>}</td>
<td>Monitor.Enter(obj);<br>try{<br>执行任务<br>}finally<br>{<br>Monitor.Exit(obj); <br>}</td>
</tr>
</tbody></table>
<h1 id="2-Example"><a href="#2-Example" class="headerlink" title="2.Example"></a>2.Example</h1><ul>
<li>使用Task.WaitAll 等待子线程完成</li>
<li>Monitor琐死要变化的参数，使其在使用时无法突变</li>
<li>使用Stopwatch观察子线程执行时长</li>
</ul>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Monitor Demo ...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> nTasks = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">object</span> obj = nTasks;</span><br><span class="line"></span><br><span class="line">    List&lt;Task&gt; tasks = <span class="keyword">new</span> List&lt;Task&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;nTasks:<span class="subst">&#123;nTasks&#125;</span>;MainThreadId:<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId&#125;</span>&quot;</span>);</span><br><span class="line">        Stopwatch sw = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">        sw.Start();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> ctr=<span class="number">0</span>;ctr&lt;<span class="number">10</span>;ctr++)</span><br><span class="line">        &#123;</span><br><span class="line">            tasks.Add(Task.Run(<span class="keyword">async</span>() =&gt; &#123;</span><br><span class="line">                Console.ForegroundColor = ConsoleColor.White;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;子任务<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId&#125;</span> 延时5000ms&quot;</span>);</span><br><span class="line">                <span class="keyword">await</span> Task.Delay(<span class="number">5000</span>);</span><br><span class="line">                Monitor.Enter(obj);</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    nTasks++;</span><br><span class="line">                    Console.WriteLine(<span class="string">$&quot;nTasks:<span class="subst">&#123;nTasks&#125;</span>;SubThreadId:<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId&#125;</span>&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">finally</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Monitor.Exit(obj);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;));</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        Console.ForegroundColor = ConsoleColor.Green;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;不会堵塞&quot;</span>);</span><br><span class="line">        Console.ForegroundColor = ConsoleColor.Red;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;使用Task.WaitAll(tasks.ToArray());等待tasks子线程结束,才执行主线程:等待子线程结束&quot;</span>);</span><br><span class="line">        Task.WaitAll(tasks.ToArray());</span><br><span class="line">        sw.Stop();</span><br><span class="line">        Console.ForegroundColor = ConsoleColor.Red;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;开始执行主线程&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;执行时长:<span class="subst">&#123;sw.ElapsedMilliseconds&#125;</span>ms&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;nTasks:<span class="subst">&#123;nTasks&#125;</span>;MainThreadId:<span class="subst">&#123;Thread.CurrentThread.ManagedThreadId&#125;</span>&quot;</span>);</span><br><span class="line">        Console.ForegroundColor = ConsoleColor.White;</span><br><span class="line">    &#125;</span><br><span class="line">    catch(AggregateException e)</span><br><span class="line">    &#123;</span><br><span class="line">        String msg = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> ie <span class="keyword">in</span> e.InnerExceptions)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;&#123;0&#125;&quot;</span>, ie.GetType().Name);</span><br><span class="line">            <span class="keyword">if</span> (!msg.Contains(ie.Message))</span><br><span class="line">                msg += ie.Message + Environment.NewLine;</span><br><span class="line">        &#125;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;\nException Message(s):&quot;</span>);</span><br><span class="line">        Console.WriteLine(msg);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.ReadLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/9d3dd46f/Monitor1.PNG" alt="Monitor测试"></p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>线程锁</tag>
      </tags>
  </entry>
  <entry>
    <title>Stopwatch使用</title>
    <url>/posts/556d494c/</url>
    <content><![CDATA[<p>Stopwatch类用于测量一段代码的运行时长，可以测量多个时间间隔的总运行时间。一般使用步骤Start() &gt;&gt;&gt; DoSomething() &gt;&gt;&gt; Stop()，最后使用 Elapsed 属性检查运行时间。每次Start()计算时间都要叠加前几次的运行时长</p>
<a id="more"></a>

<h1 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h1><p>官网介绍:<a href="https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.stopwatch?view=net-5.0">Stopwatch</a></p>
<h1 id="1-1-属性"><a href="#1-1-属性" class="headerlink" title="1.1 属性"></a>1.1 属性</h1><table>
<thead>
<tr>
<th align="left">属性名</th>
<th>描述</th>
<th>权限</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Frequency:long</td>
<td>计时器频率</td>
<td>RO</td>
</tr>
<tr>
<td align="left">IsHighResolution:bool</td>
<td>是否基于高分辨率性能计数器</td>
<td>RO</td>
</tr>
<tr>
<td align="left">Elapsed:TimeSpan</td>
<td>当前实例测量得出的总运行时间</td>
<td>RO</td>
</tr>
<tr>
<td align="left">ElapsedMilliseconds:long</td>
<td>当前实例测量得出的总毫秒数</td>
<td>RO</td>
</tr>
<tr>
<td align="left">IsRunning:bool</td>
<td>计时器是否在运行</td>
<td>RO</td>
</tr>
</tbody></table>
<h1 id="1-2方法"><a href="#1-2方法" class="headerlink" title="1.2方法"></a>1.2方法</h1><table>
<thead>
<tr>
<th align="left">方法名</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">GetTimestamp():long</td>
<td>获取计时器机制中的当前最小时间单位数</td>
</tr>
<tr>
<td align="left">StartNew():Stopwatch</td>
<td>创建新实例，并开始计时</td>
</tr>
<tr>
<td align="left">Reset()</td>
<td>运行时间重置</td>
</tr>
<tr>
<td align="left">Restart()</td>
<td>重新计数并开始测量</td>
</tr>
<tr>
<td align="left">Start()</td>
<td>开始测量</td>
</tr>
<tr>
<td align="left">Stop()</td>
<td>停止测量</td>
</tr>
</tbody></table>
<h1 id="2-Example"><a href="#2-Example" class="headerlink" title="2.Example"></a>2.Example</h1><h1 id="2-1-简单测量"><a href="#2-1-简单测量" class="headerlink" title="2.1 简单测量"></a>2.1 简单测量</h1><blockquote>
<p>Task1:单次测量<br>Task2:叠加测量<br>Task3:重新测量</p>
</blockquote>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Stopwatch fist Start ...&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    Stopwatch sw = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> [第一次运行Stopwatch]</span></span><br><span class="line">    sw.Start();</span><br><span class="line">    Thread.Sleep(<span class="number">5000</span>);</span><br><span class="line">    sw.Stop();</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Stopwatch first Stop ...&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Stopwatch运行时长:<span class="subst">&#123;sw.ElapsedMilliseconds&#125;</span>ms&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> [其他工作]</span></span><br><span class="line">    Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;使用2秒，完成其他工作 ...&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> [第二次运行Stopwatch]</span></span><br><span class="line">    Console.ForegroundColor = ConsoleColor.Red;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;*** 第一、二次运行时长的叠加 ***&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Stopwatch second Start ...&quot;</span>);</span><br><span class="line">    sw.Start();</span><br><span class="line">    Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">    sw.Stop();</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Stopwatch second Stop ...&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Stopwatch运行时长:<span class="subst">&#123;sw.ElapsedMilliseconds&#125;</span>ms&quot;</span>);</span><br><span class="line">    Console.ForegroundColor = ConsoleColor.White;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> [第二次运行Stopwatch，重新计数]</span></span><br><span class="line">    Console.ForegroundColor = ConsoleColor.Green;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;*** 第三次重新计数 ***&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Stopwatch third Start ...&quot;</span>);</span><br><span class="line">    sw.Restart();</span><br><span class="line">    Thread.Sleep(<span class="number">3000</span>);</span><br><span class="line">    sw.Stop();</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Stopwatch third Stop ...&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Stopwatch运行时长:<span class="subst">&#123;sw.ElapsedMilliseconds&#125;</span>ms&quot;</span>);</span><br><span class="line">    Console.ForegroundColor = ConsoleColor.White;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    Console.ReadLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出效果</p>
</blockquote>
<p><img src="/posts/556d494c/Stopwatch1.PNG" alt="简单测试"></p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>时间检测</tag>
      </tags>
  </entry>
  <entry>
    <title>Reinforcement Learning And optimal adaptive control</title>
    <url>/posts/fd577013/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>01.DotNet Core Blog:基于EFCore数据库设计与开发</title>
    <url>/posts/ec75ea98/</url>
    <content><![CDATA[<p>使用Asp.Net Core设计开发个人博客:第一阶段数据库设计</p>
<a id="more"></a>

<h1 id="1-数据库设计"><a href="#1-数据库设计" class="headerlink" title="1.数据库设计"></a>1.数据库设计</h1><blockquote>
<p>文章表(PaperTable)</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">变量名称</th>
<th>描述</th>
<th>类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left">ID</td>
<td>唯一ID</td>
<td>int</td>
</tr>
<tr>
<td align="left">Title</td>
<td>文章标题</td>
<td>nvarchar(30)</td>
</tr>
<tr>
<td align="left">Content</td>
<td>内容</td>
<td>text</td>
</tr>
<tr>
<td align="left">Time</td>
<td>创建时间</td>
<td>DateTime</td>
</tr>
<tr>
<td align="left">PaperTypeID</td>
<td>文章类型ID(考虑使用外键)</td>
<td>int</td>
</tr>
<tr>
<td align="left">Browers</td>
<td>浏览量</td>
<td>int</td>
</tr>
<tr>
<td align="left">Supports</td>
<td>点赞</td>
<td>int</td>
</tr>
<tr>
<td align="left">AuthorID</td>
<td>作者ID</td>
<td>int</td>
</tr>
</tbody></table>
<blockquote>
<p>文章类型表(PaperID)</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">变量名称</th>
<th>描述</th>
<th>类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left">ID</td>
<td>唯一ID</td>
<td>int</td>
</tr>
<tr>
<td align="left">Name</td>
<td>类型名</td>
<td>nvarchar(30)</td>
</tr>
</tbody></table>
<blockquote>
<p>作者表(AuthorID)</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">变量名称</th>
<th>描述</th>
<th>类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left">ID</td>
<td>唯一ID</td>
<td>int</td>
</tr>
<tr>
<td align="left">Name</td>
<td>姓名</td>
<td>nvarchar(12)</td>
</tr>
<tr>
<td align="left">UserName</td>
<td>账号</td>
<td>nvarchar(16)</td>
</tr>
<tr>
<td align="left">UserPwd</td>
<td>密码(MD5加密)</td>
<td>nvarchar(64)</td>
</tr>
</tbody></table>
<h1 id="2-数据库开发"><a href="#2-数据库开发" class="headerlink" title="2.数据库开发"></a>2.数据库开发</h1><h2 id="2-1-NuGet-安装EFCore的相关库"><a href="#2-1-NuGet-安装EFCore的相关库" class="headerlink" title="2.1 NuGet 安装EFCore的相关库"></a>2.1 NuGet 安装EFCore的相关库</h2><p><img src="/posts/ec75ea98/MySqlNuGet%E5%AE%89%E8%A3%85%E5%BA%93.PNG" alt="EFCore MySql需要的库"></p>
<table>
<thead>
<tr>
<th align="center">数据库系统</th>
<th align="center">配置示例</th>
<th align="center">NuGet程序包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SQLServer<br>AzureSQL</td>
<td align="center">.UseSqlServer(connectionString)</td>
<td align="center">Microsoft.EntityFrameworkCore.SqlServer</td>
</tr>
<tr>
<td align="center">Azure Cosmos DB</td>
<td align="center">.UseCosmos(connectionString, databaseName)</td>
<td align="center">Microsoft.EntityFrameworkCore.Cosmos</td>
</tr>
<tr>
<td align="center">SQLite</td>
<td align="center">.UseSqlite(connectionString)</td>
<td align="center">Microsoft.EntityFrameworkCore.Sqlite</td>
</tr>
<tr>
<td align="center">EFCore内存中数据库</td>
<td align="center">.UseInMemoryDatabase(databaseName)</td>
<td align="center">Microsoft.EntityFrameworkCore.InMemory</td>
</tr>
<tr>
<td align="center">PostgreSQL*</td>
<td align="center">.UseNpgsql(connectionString)</td>
<td align="center">Npgsql.EntityFrameworkCore.PostgreSQL</td>
</tr>
<tr>
<td align="center">MySQL/MariaDB*</td>
<td align="center">.UseMySql((connectionString)</td>
<td align="center">Pomelo.EntityFrameworkCore.MySql</td>
</tr>
<tr>
<td align="center">Oracle*</td>
<td align="center">.UseOracle(connectionString)</td>
<td align="center">Oracle.EntityFrameworkCore</td>
</tr>
</tbody></table>
<h2 id="2-2-Model库的类设计，与数据库上下文绑定在一起"><a href="#2-2-Model库的类设计，与数据库上下文绑定在一起" class="headerlink" title="2.2 Model库的类设计，与数据库上下文绑定在一起"></a>2.2 Model库的类设计，与数据库上下文绑定在一起</h2><h3 id="2-2-1-实体属性"><a href="#2-2-1-实体属性" class="headerlink" title="2.2.1 实体属性"></a>2.2.1 实体属性</h3><p>使用实体属性将模型类映射到列表(<a href="https://docs.microsoft.com/zh-cn/ef/core/modeling/entity-properties?tabs=data-annotations%2Cwithout-nrt">详见微软EFCore官方文档</a>)</p>
<ul>
<li><code>[Key]</code>:主键</li>
<li><code>[NotMapped]</code>:排除特定属性</li>
<li><code>[Column(&quot;xxx&quot;)]</code>:指定列名</li>
<li><code>[Column(TypeName=&quot;nvarchar(200)&quot;)]</code>,<code>[Column(TypeName = &quot;decimal(5, 2)&quot;)]</code>:指定属性类型</li>
<li><code>[MaxLength(500)]</code>:指定最大长度</li>
<li><code>[required]</code>:属性值不可以为NULL</li>
<li><code>[optional]</code>:属性值可以为NULL</li>
<li><code> [DatabaseGenerated(DatabaseGeneratedOption.Identity)]</code>非主键，自动生成键值，如日期</li>
<li><code>[DatabaseGenerated(DatabaseGeneratedOption.None)]</code>无值生成</li>
</ul>
<blockquote>
<p>通用属性ID &gt;&gt;&gt; 继承</p>
</blockquote>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BaseId</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Key</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>AuthorTable设计</p>
</blockquote>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">Table(<span class="meta-string">&quot;AuthorTable&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthorInfo</span>:<span class="title">BaseId</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Column(TypeName = <span class="meta-string">&quot;nvarchar(12)&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Column(TypeName = <span class="meta-string">&quot;nvarchar(16)&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> UserName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Column(TypeName = <span class="meta-string">&quot;nvarchar(64)&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> UserPwd &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>PaperTypeTable设计</p>
</blockquote>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">Table(<span class="meta-string">&quot;PaperTypeTable&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PaperTypeInfo</span>:<span class="title">BaseId</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Column(TypeName = <span class="meta-string">&quot;nvarchar(12)&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>PaperTable</p>
</blockquote>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">Table(<span class="meta-string">&quot;PaperTable&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PaperInfo</span>:<span class="title">BaseId</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Column(TypeName = <span class="meta-string">&quot;nvarchar(30)&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Title &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    [<span class="meta">Column(TypeName = <span class="meta-string">&quot;text&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Content &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime Time &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Browers &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Supports &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> AuthorId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> PaperTypeId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 该数据类型不映射至数据库</span></span><br><span class="line">    [<span class="meta">NotMapped</span>]</span><br><span class="line">    <span class="keyword">public</span> PaperTypeInfo PaperType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    [<span class="meta">NotMapped</span>]</span><br><span class="line">    <span class="keyword">public</span> AuthorInfo Author &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>DbContext 生存期、配置和初始化</p>
          </div>

<p>步骤:</p>
<ul>
<li>创建 DbContext 上下文实例</li>
<li>根据上下文实例执行CRUD操作</li>
<li>调用 SaveChanges 或 SaveChangesAsync将上述操作写入数据库中</li>
<li>释放DbContext</li>
</ul>
<blockquote>
<p>方法1: ASP.NET Core 依赖关系注入中的 DbContext</p>
</blockquote>
<ol>
<li>创建上下文类<br>ApplicationDbContext类必须公开具有DbContextOptions<ApplicationDbContext>参数的公共构造函数。这是将 AddDbContext的上下文配置传递到DbContext的方式<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApplicationDbContext</span> : <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ApplicationDbContext</span>(<span class="params">DbContextOptions&lt;ApplicationDbContext&gt; options</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span>(<span class="params">options</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></ApplicationDbContext></li>
<li>使用Startup.cs的ConfigureServices方法中的AddDbContext 将 EF Core 添加到此配置。</li>
</ol>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    services.AddControllers();</span><br><span class="line">    services.AddDbContext&lt;ApplicationDbContext&gt;(</span><br><span class="line">        options =&gt; options.UseMySql(<span class="string">&quot;server=127.0.0.1;user id=root;persistsecurityinfo=True&quot;</span>)</span><br><span class="line">        ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>方法2: 使用”new”的简单的 DbContext 初始化</p>
</blockquote>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApplicationDbContext</span> : <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnConfiguring</span>(<span class="params">DbContextOptionsBuilder optionsBuilder</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        optionsBuilder.UseMySql(<span class="string">@&quot;server=127.0.0.1;user id=root;persistsecurityinfo=True&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>或者通过构造函数传递 连接字符串</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApplicationDbContext</span> : <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _connectionString;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ApplicationDbContext</span>(<span class="params"><span class="built_in">string</span> connectionString</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _connectionString = connectionString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnConfiguring</span>(<span class="params">DbContextOptionsBuilder optionsBuilder</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        optionsBuilder.UseMySql(_connectionString);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在或者</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> contextOptions = <span class="keyword">new</span> DbContextOptionsBuilder&lt;ApplicationDbContext&gt;()</span><br><span class="line">    .UseMySql(<span class="string">@&quot;Server=(localdb)\mssqllocaldb;Database=Test&quot;</span>)</span><br><span class="line">    .Options;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">var</span> context = <span class="keyword">new</span> ApplicationDbContext(contextOptions);</span><br></pre></td></tr></table></figure>

<div class="note info">
            <p>DbContext 使用</p>
          </div>

<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyController</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ApplicationDbContext _context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyController</span>(<span class="params">ApplicationDbContext context</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _context = context;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-2-2-为每个Table建立通用CRUD接口库"><a href="#2-2-2-为每个Table建立通用CRUD接口库" class="headerlink" title="2.2.2 为每个Table建立通用CRUD接口库"></a>2.2.2 为每个Table建立通用CRUD接口库</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">public interface IBaseRepository&lt;TEntity&gt; where TEntity:class,new()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> [CRUD] </span></span><br><span class="line">    <span class="function">Task&lt;<span class="built_in">bool</span>&gt; <span class="title">CreateAsync</span>(<span class="params">TEntity entity</span>)</span>;</span><br><span class="line">    <span class="function">Task&lt;<span class="built_in">bool</span>&gt; <span class="title">DeleteAsync</span>(<span class="params"><span class="built_in">int</span> id</span>)</span>;</span><br><span class="line">    <span class="function">Task&lt;<span class="built_in">bool</span>&gt; <span class="title">UpdateAsync</span>(<span class="params">TEntity entity</span>)</span>;</span><br><span class="line">    <span class="function">Task&lt;TEntity&gt; <span class="title">QueryAsync</span>(<span class="params"><span class="built_in">int</span> id</span>)</span>;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 查询所有数据</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    Task&lt;List&lt;TEntity&gt;&gt; QueryAllAsync();</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 自定义查询条件</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;func&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    Task&lt;List&lt;TEntity&gt;&gt; QueryAsync(Expression&lt;Func&lt;TEntity,<span class="built_in">bool</span>&gt;&gt; func);</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 分页查询</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;page&quot;&gt;</span>设置跳转的页码<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;size&quot;&gt;</span>每页的数量<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;total&quot;&gt;</span>总数目<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    Task&lt;List&lt;TEntity&gt;&gt; QueryAsync(<span class="built_in">int</span> page,<span class="built_in">int</span> size,<span class="keyword">ref</span> <span class="built_in">int</span> total);</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 自定义查询 + 分页</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;func&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;page&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;size&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;total&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    Task&lt;List&lt;TEntity&gt;&gt; QueryAsync(Expression&lt;Func&lt;TEntity, <span class="built_in">bool</span>&gt;&gt; func,<span class="built_in">int</span> page, <span class="built_in">int</span> size, <span class="keyword">ref</span> <span class="built_in">int</span> total);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-2-3-实现通用CRUD库"><a href="#2-2-3-实现通用CRUD库" class="headerlink" title="2.2.3 实现通用CRUD库"></a>2.2.3 实现通用CRUD库</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>DotNet Core</category>
      </categories>
      <tags>
        <tag>WebApi</tag>
        <tag>EFCore</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32_ADC</title>
    <url>/posts/4a89b3b9/</url>
    <content><![CDATA[<p>ESP32 集成了2个12位逐次逼近型AD,有5个专用转换控制器管理,支持18个AD转换通道,可以测量内部VDD等电压信号，本次实验利用一路AD采集光敏电阻电压</p>
<a id="more"></a>
<blockquote>
<p>特性</p>
</blockquote>
<ul>
<li>1个内部电压vdd33通道、2个pa_pkdet通道</li>
<li>可配置12位、11位、10位、9位多种分辨率</li>
<li>支持DMA(1个控制器支持)</li>
<li>支持多通道扫描模式(2个控制器支持)</li>
<li>支持Deep-sleep模式运行(1个控制器支持)</li>
<li>支持ULP协处理器控制(2个控制器支持)</li>
</ul>
<p>ESP32拥有5个专用转换器:</p>
<ul>
<li>2个高性能多通道扫描转换器，SAR ADC1/2 Controller [<font color="red">ADC1 8路:GPIO32-39</font>,<font color="red">ADC2 10路:GPIO0,2,4,12-15,25-27</font>]</li>
<li>2个支持Deep-sleep模式下低功耗转换器, RTC ADC1/2 Controller</li>
<li>1个功率检测/峰值检测控制器</li>
</ul>
<div class="note warning">
            <p>ADC2 限制</p>
          </div>
<ul>
<li>仅当WiFi驱动程序未启动时,应用程序才能使用ADC2,因为具有更高优先级的WiFi驱动程序也使用ADC.某些ADC2引脚用作捆扎引脚(GPIO0,2,15),因此无法自由使用</li>
</ul>
<h1 id="1-硬件原理图"><a href="#1-硬件原理图" class="headerlink" title="1.硬件原理图"></a>1.硬件原理图</h1><p><img src="/posts/4a89b3b9/%E5%85%89%E7%85%A7%E4%BC%A0%E6%84%9F%E5%99%A8.png" alt="光敏电阻电路"></p>
<h1 id="2-硬件初始化"><a href="#2-硬件初始化" class="headerlink" title="2.硬件初始化"></a>2.硬件初始化</h1><ul>
<li>设置ADC分辨率</li>
<li>设置ADC基准电压</li>
</ul>
<h1 id="3-API介绍"><a href="#3-API介绍" class="headerlink" title="3.API介绍"></a>3.API介绍</h1><blockquote>
<p>导入头文件: “driver/adc.h” “esp_adc_cal.h”</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">函数名</th>
<th>描述</th>
<th>案例</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>esp_err_t adc1_config_width(adc_bits_width_t width_bit)</code></td>
<td>配置ADC1所有通道分辨率<br>width_bit:<code>ADC_WIDTH_9Bit:ADC_WIDTH_12Bit</code></td>
<td><code>adc1_config_width(ADC_WIDTH_12Bit)</code></td>
</tr>
<tr>
<td align="left"><code>esp_err_t adc1_config_channel_atten(adc1_channel_t channel,adc_atten_t atten)</code></td>
<td>配置ADC1通道的基准电压源,默认0db:1.1V<br>channel:<code>ADC1_CHANNEL_0:ADC1_CHANNEL_7</code><br>atten:<code>ADC_ATTEN_0db,2_5db,6db,11db</code>[1,1/1.34,1/2,1/3.6]</td>
<td><code>adc1_config_channel_atten(ADC1_CHANNEL_0,ADC_ATTEN_0db)</code></td>
</tr>
<tr>
<td align="left"><code>int adc1_get_voltage(adc1_channel_t channel)</code></td>
<td>获取ADC1通道读数</td>
<td><code>adc1_get_voltage(ADC1_CHANNEL_0)</code></td>
</tr>
</tbody></table>
<blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/ledc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/gpio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_err.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/adc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_adc_cal.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIGHT_SENSOR_CHANNEL ADC1_CHANNEL_6</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_ADCInit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	adc1_config_width(ADC_WIDTH_12Bit);<span class="comment">// 12位分辨率</span></span><br><span class="line">	adc1_config_channel_atten(LIGHT_SENSOR_CHANNEL,ADC_ATTEN_DB_6);<span class="comment">// 设置通道6和2.2V参考电压</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* TAG = <span class="string">&quot;Light Sensor ADC&quot;</span>;</span><br><span class="line">	<span class="keyword">int</span> lightPower;</span><br><span class="line">	ESP_LOGW(TAG,<span class="string">&quot;&gt;&gt;&gt; Light Sensor Initialize... &lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	bsp_ADCInit();</span><br><span class="line">	ESP_LOGW(TAG,<span class="string">&quot;&gt;&gt;&gt; Light Sensor Start... &lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span>(;;)</span><br><span class="line">	&#123;</span><br><span class="line">		lightPower = adc1_get_raw(LIGHT_SENSOR_CHANNEL);</span><br><span class="line">		ESP_LOGI(TAG,<span class="string">&quot;ADC_Value:  %d    Voltage:  %f mV&quot;</span>, lightPower, (lightPower*<span class="number">2200.0</span>)/<span class="number">4096</span>);</span><br><span class="line">		vTaskDelay(<span class="number">1000</span> / portTICK_RATE_MS);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/4a89b3b9/LightSensorADC.PNG" alt="LightSensorADC"></p>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>ADC</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32_Interrupt</title>
    <url>/posts/b8e6041e/</url>
    <content><![CDATA[<p>实现两种功能:<br>利用轮询方式判断按键是否按下，短、长按，连发等功能的实现<br>利用外部中断判断按键是否按下，获取按下时长</p>
<a id="more"></a>
<h1 id="0-原理图"><a href="#0-原理图" class="headerlink" title="0.原理图"></a>0.原理图</h1><p><img src="/posts/b8e6041e/USBLoadProgram.png" alt="BootKey图片"></p>
<p>BOOT KEY 作为本次实验对象</p>
<h1 id="1-按键FIFO轮询采样"><a href="#1-按键FIFO轮询采样" class="headerlink" title="1.按键FIFO轮询采样"></a>1.按键FIFO轮询采样</h1><blockquote>
<p>功能逻辑简图</p>
</blockquote>
<p><img src="/posts/b8e6041e/KeyScan.png" alt="KeyScan原理图片"></p>
<ol>
<li>定义按键FIFO缓冲区Buffer,10个字节大小,设计读/写指针:Read/Write</li>
<li>定义按键结构体，实现按键防抖，长按识别，长按连发功能</li>
<li>以10ms的间隔，扫描按键，并将按下、长按、弹起的键值用bsp_PutKey()放入Buffer中,而处理任务通过bspGetKey()获取键值，执行相应策略</li>
</ol>
<blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/ledc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/gpio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_err.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/adc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_adc_cal.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_FIFO_SIZE 	10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_COUNT		1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_FILTER_TIME 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_LONG_TIME   100 <span class="comment">/* 单位10ms， 持续1秒，认为长按事件 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY1_Pin		0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span>&#123;</span></span><br><span class="line">	KEY_NONE = <span class="number">0</span>,</span><br><span class="line">	</span><br><span class="line">	K1_DOWN = <span class="number">1</span>,</span><br><span class="line">	K1_UP = <span class="number">2</span>,</span><br><span class="line">	K1_LONG = <span class="number">3</span>,</span><br><span class="line">&#125;KEY_VALUE_ENUM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">	<span class="keyword">uint8_t</span> Buffer[KEY_FIFO_SIZE];</span><br><span class="line">	<span class="keyword">uint8_t</span> Read;</span><br><span class="line">	<span class="keyword">uint8_t</span> Write;</span><br><span class="line">&#125;KEY_FIFO_TYPE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> KEY_FIFO_TYPE s_tKeyFIFO;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_PutKey</span><span class="params">(<span class="keyword">uint8_t</span> keyCode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	s_tKeyFIFO.Buffer[s_tKeyFIFO.Write] = keyCode;</span><br><span class="line">	<span class="keyword">if</span>(++s_tKeyFIFO.Write &gt;= KEY_FIFO_SIZE)</span><br><span class="line">	&#123;</span><br><span class="line">		s_tKeyFIFO.Write = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">bsp_GetKey</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">uint8_t</span> ret;</span><br><span class="line">	<span class="keyword">if</span>(s_tKeyFIFO.Read == s_tKeyFIFO.Write)</span><br><span class="line">	&#123;</span><br><span class="line">		ret = KEY_NONE;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		ret = s_tKeyFIFO.Buffer[s_tKeyFIFO.Read];</span><br><span class="line">		<span class="keyword">if</span>(++s_tKeyFIFO.Read&gt;=KEY_FIFO_SIZE)</span><br><span class="line">		&#123;</span><br><span class="line">			s_tKeyFIFO.Read=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">	<span class="keyword">uint8_t</span> (*IsKeyDownFunc)(<span class="keyword">void</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">uint8_t</span> FilterCount;		<span class="comment">// 滤波计数</span></span><br><span class="line">	<span class="keyword">uint16_t</span> LongCount;	<span class="comment">// 长按有效计数值</span></span><br><span class="line">	<span class="keyword">uint16_t</span> LongTime;	<span class="comment">// 按下持续时间，0:不检测长按</span></span><br><span class="line">	<span class="keyword">uint8_t</span> State;		<span class="comment">// 当前按键状态</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">uint8_t</span> RepeatSpeed;<span class="comment">// 连续按键周期</span></span><br><span class="line">	<span class="keyword">uint8_t</span> RepeatCount;<span class="comment">// 连续按键计数器</span></span><br><span class="line">&#125;KEY_TYPE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> KEY_TYPE s_tBtn[KEY_COUNT];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">IsKeyDown1</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">uint8_t</span> flag=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(gpio_get_level(KEY1_Pin)==<span class="number">0</span>)</span><br><span class="line">		flag = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bsp_InitKeyVar</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">uint8_t</span> i=<span class="number">0</span>;</span><br><span class="line">	s_tKeyFIFO.Read = <span class="number">0</span>;</span><br><span class="line">	s_tKeyFIFO.Write = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;KEY_COUNT;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		s_tBtn[i].LongTime = KEY_LONG_TIME;</span><br><span class="line">		s_tBtn[i].FilterCount = KEY_FILTER_TIME/<span class="number">2</span>;</span><br><span class="line">		s_tBtn[i].State = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		s_tBtn[i].RepeatSpeed = <span class="number">0</span>;</span><br><span class="line">		s_tBtn[i].RepeatCount = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	s_tBtn[<span class="number">0</span>].IsKeyDownFunc = IsKeyDown1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bsp_InitKeyHard</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 配置GPIO结构体</span></span><br><span class="line">	<span class="keyword">gpio_config_t</span> io_conf;</span><br><span class="line">	io_conf.intr_type = GPIO_INTR_ANYEDGE;		<span class="comment">// 下降沿和上升沿触发中断</span></span><br><span class="line">	io_conf.pin_bit_mask = <span class="number">1</span> &lt;&lt; KEY1_Pin;	<span class="comment">// 设置GPIO号</span></span><br><span class="line">	io_conf.mode = GPIO_MODE_INPUT;				<span class="comment">// 模式输入</span></span><br><span class="line">	io_conf.pull_up_en = GPIO_PULLUP_ENABLE;	<span class="comment">// 端口上拉使能</span></span><br><span class="line">	gpio_config(&amp;io_conf);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_InitKey</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	bsp_InitKeyVar();</span><br><span class="line">	bsp_InitKeyHard();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bsp_DetectKey</span><span class="params">(<span class="keyword">uint8_t</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	KEY_TYPE *pBtn;</span><br><span class="line">	pBtn = &amp;s_tBtn[i];</span><br><span class="line">	<span class="keyword">if</span>(pBtn-&gt;IsKeyDownFunc())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// 短按</span></span><br><span class="line">		<span class="keyword">if</span>(pBtn-&gt;FilterCount&lt;KEY_FILTER_TIME)</span><br><span class="line">		&#123;</span><br><span class="line">			pBtn-&gt;FilterCount = KEY_FILTER_TIME;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(pBtn-&gt;FilterCount&lt;<span class="number">2</span>*KEY_FILTER_TIME)</span><br><span class="line">		&#123;</span><br><span class="line">			pBtn-&gt;FilterCount++;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="comment">// 之前未按下</span></span><br><span class="line">			<span class="keyword">if</span>(pBtn-&gt;State==<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				pBtn-&gt;State = <span class="number">1</span>;</span><br><span class="line">				bsp_PutKey((<span class="keyword">uint8_t</span>)(<span class="number">3</span>*i+<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="comment">// 1s以内无需处理</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 如果支持长按</span></span><br><span class="line">			<span class="keyword">if</span>(pBtn-&gt;LongTime&gt;<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(pBtn-&gt;LongCount&lt;pBtn-&gt;LongTime)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">// 单次长按</span></span><br><span class="line">					<span class="keyword">if</span>(++pBtn-&gt;LongCount==pBtn-&gt;LongTime)</span><br><span class="line">					&#123;</span><br><span class="line">						bsp_PutKey((<span class="keyword">uint8_t</span>)(<span class="number">3</span>*i+<span class="number">3</span>));</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="comment">// 超出长按阈值--&gt;&gt;&gt;连发</span></span><br><span class="line">					<span class="keyword">if</span>(pBtn-&gt;RepeatSpeed&gt;<span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">if</span>(++pBtn-&gt;RepeatCount&gt;=pBtn-&gt;RepeatSpeed)</span><br><span class="line">						&#123;</span><br><span class="line">							pBtn-&gt;RepeatCount=<span class="number">0</span>;</span><br><span class="line">							bsp_PutKey((<span class="keyword">uint8_t</span>)(<span class="number">3</span>*i+<span class="number">1</span>));</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="comment">// 判断按键是否弹起</span></span><br><span class="line">		<span class="keyword">if</span>(pBtn-&gt;FilterCount&gt;KEY_FILTER_TIME)&#123;</span><br><span class="line">			pBtn-&gt;FilterCount=KEY_FILTER_TIME;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(pBtn-&gt;FilterCount!=<span class="number">0</span>)&#123;</span><br><span class="line">			pBtn-&gt;FilterCount--;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(pBtn-&gt;State==<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				pBtn-&gt;State = <span class="number">0</span>;</span><br><span class="line">				bsp_PutKey((<span class="keyword">uint8_t</span>)(<span class="number">3</span>*i+<span class="number">2</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		pBtn-&gt;LongCount=<span class="number">0</span>;</span><br><span class="line">		pBtn-&gt;RepeatCount=<span class="number">0</span>;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_KeyScan</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">uint8_t</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;KEY_COUNT;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		bsp_DetectKey(i);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 任务优先级: 4</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TSK_KeyScan10ms</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(;;)</span><br><span class="line">	&#123;</span><br><span class="line">		bsp_KeyScan();</span><br><span class="line">		vTaskDelay(<span class="number">10</span> / portTICK_PERIOD_MS);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TSK_UserIF</span></span><br><span class="line"><span class="comment">// 接口消息处理(获取键值，LED等闪烁)</span></span><br><span class="line"><span class="comment">// 优先级:1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TSK_UserIF</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(;;)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">uint8_t</span> val = bsp_GetKey();</span><br><span class="line">		<span class="keyword">if</span>(val!=<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">switch</span>(val)</span><br><span class="line">			&#123;</span><br><span class="line">			<span class="keyword">case</span> K1_DOWN:</span><br><span class="line">				ESP_LOGI(<span class="string">&quot;KEY查询方式&quot;</span>, <span class="string">&quot;按键按下,输入键值:%d&quot;</span>,val);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> K1_UP:</span><br><span class="line">				ESP_LOGI(<span class="string">&quot;KEY查询方式&quot;</span>, <span class="string">&quot;按键弹起,输入键值:%d&quot;</span>,val);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> K1_LONG:</span><br><span class="line">				ESP_LOGI(<span class="string">&quot;KEY查询方式&quot;</span>, <span class="string">&quot;按键长按,输入键值:%d&quot;</span>,val);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		vTaskDelay(<span class="number">500</span> / portTICK_PERIOD_MS);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ESP_LOGW(<span class="string">&quot;KEY查询方式&quot;</span>,<span class="string">&quot;&gt;&gt;&gt;&gt;==== GPIO初始化... ====&lt;&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	bsp_InitKey();</span><br><span class="line">	ESP_LOGW(<span class="string">&quot;KEY查询方式&quot;</span>,<span class="string">&quot;&gt;&gt;&gt;&gt;==== 创建KEY轮询任务... ====&lt;&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	xTaskCreate(TSK_KeyScan10ms,<span class="string">&quot;KeyScan&quot;</span>,<span class="number">1024</span>*<span class="number">2</span>,<span class="literal">NULL</span>,<span class="number">4</span>,<span class="literal">NULL</span>);</span><br><span class="line">	xTaskCreate(TSK_UserIF,<span class="string">&quot;Task_LOG&quot;</span>,<span class="number">1024</span>*<span class="number">2</span>,<span class="literal">NULL</span>,<span class="number">1</span>,<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/b8e6041e/KEY_FIFO%E8%BD%AE%E8%AF%A2%E6%96%B9%E5%BC%8F.PNG" alt="KEY查询采样"></p>
<h1 id="2-中断方式"><a href="#2-中断方式" class="headerlink" title="2.中断方式"></a>2.中断方式</h1>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>Interrupt</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32_LED</title>
    <url>/posts/c52e8408/</url>
    <content><![CDATA[<p>ESP32控制LED灯亮灭 (裸机模式&amp;FreeRTOS系统)</p>
<a id="more"></a>
<h1 id="1-功能需求"><a href="#1-功能需求" class="headerlink" title="1.功能需求"></a>1.功能需求</h1><ul>
<li>裸机模式:以1s间隔点亮/熄灭LED</li>
<li>FreeRTOS:以任务的方式:1s间隔点亮/熄灭LED</li>
</ul>
<h1 id="2-硬件原理图"><a href="#2-硬件原理图" class="headerlink" title="2.硬件原理图"></a>2.硬件原理图</h1><p><img src="/posts/c52e8408/LED.PNG" alt="ESP32开发板介绍"></p>
<h1 id="3-软件设计"><a href="#3-软件设计" class="headerlink" title="3.软件设计"></a>3.软件设计</h1><h2 id="3-1-裸机代码"><a href="#3-1-裸机代码" class="headerlink" title="3.1 裸机代码"></a>3.1 裸机代码</h2><blockquote>
<p>1.硬件初始化</p>
</blockquote>
<ul>
<li>绑定GPIO引脚 </li>
<li>GPIO功能模式: GPIO推挽输入/输出/开漏输入/输出 </li>
<li>设置GPIO输出电平 </li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_GpioInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ESP_LOGI(TAG, <span class="string">&quot;&gt;&gt;&gt;===== 1.GPIO初始化 =====&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	gpio_pad_select_gpio(GPIO_LED_Pin); <span class="comment">// 选择要操作的GPIO</span></span><br><span class="line">	gpio_set_direction(GPIO_LED_Pin, GPIO_MODE_OUTPUT); <span class="comment">// 设置GPIO为推挽输出模式</span></span><br><span class="line">	ESP_LOGI(TAG, <span class="string">&quot;&gt;&gt;&gt;===== GPIO初始化成功! =====&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>API介绍</p>
</blockquote>
<p>头文件路径: <code>#include &quot;driver/gpio.h&quot;</code></p>
<table>
<thead>
<tr>
<th align="left">函数名</th>
<th>描述</th>
<th>案例</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>void gpio_pad_select_gpio(uint8_t gpio_num);</code></td>
<td>绑定GPIO</td>
<td>gpio_pad_select_gpio(4)</td>
</tr>
<tr>
<td align="left"><code>esp_err_t gpio_set_direction(gpio_num_t gpio_num, gpio_mode_t mode);</code></td>
<td>设置GPIO功能模式(输入/输出方向)</td>
<td>gpio_set_direction(4,GPIO_MODE_DISABLE)<br><code>GPIO_MODE_DISABLE</code><br><code>GPIO_MODE_INPUT</code><br><code>GPIO_MODE_OUTPUT</code><br><code>GPIO_MODE_OUTPUT_OD</code><br><code>GPIO_MODE_INPUT_OUTPUT_OD</code><br><code>GPIO_MODE_INPUT_OUTPUT</code></td>
</tr>
<tr>
<td align="left">void vTaskDelay(uint ticks)</td>
<td>延迟n个节拍</td>
<td>vTaskDelay(1000 / portTICK_PERIOD_MS)</td>
</tr>
</tbody></table>
<blockquote>
<p>主函数</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hello Bug Example</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_spi_flash.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIO_LED_Pin	4</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* TAG = <span class="string">&quot;LED&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">bool</span> toggleFlag = <span class="literal">true</span>;</span><br><span class="line">	</span><br><span class="line">	bsp_GpioInit();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(;;)&#123;</span><br><span class="line"></span><br><span class="line">		ESP_LOGI(TAG, <span class="string">&quot;Turning %s...\n&quot;</span>,toggleFlag?<span class="string">&quot;On&quot;</span>:<span class="string">&quot;Off&quot;</span>);</span><br><span class="line">		vTaskDelay(<span class="number">1000</span> / portTICK_PERIOD_MS);</span><br><span class="line">		gpio_set_level(GPIO_LED_Pin,toggleFlag);</span><br><span class="line">		toggleFlag=!toggleFlag;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	ESP_LOGI(TAG, <span class="string">&quot;Restarting now.&quot;</span>);</span><br><span class="line">	<span class="comment">//fflush(stdout);</span></span><br><span class="line">	esp_restart();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/c52e8408/LED_BUG.PNG" alt="SwitchLED_Debug">;</p>
<h2 id="3-2-FreeRTOS代码"><a href="#3-2-FreeRTOS代码" class="headerlink" title="3.2 FreeRTOS代码"></a>3.2 FreeRTOS代码</h2><blockquote>
<p>API介绍</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">函数名</th>
<th>描述</th>
<th>案例</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>portBASE_TYPE xTaskCreate(pdTASK_CODE pvTaskCode,const portCHAR * const pcName,unsigned portSHORT usStackDepth,void *pvParameters,unsigned portBASE_TYPE uxPriority,xTaskHandle *pvCreatedTask);</code></td>
<td>创建任务句柄<br><font color="red" fontweight="Bold">pvTaskCode:</font>指向任务函数,一般死循环<br><font color="red" fontweight="Bold">pcName:</font>任务函数的别名，仅仅是方便调试所用<br><font color="red" fontweight="Bold">usStackDepth:</font>任务堆栈的深度，定义了堆栈可以包含的变量数,其字节数大小=堆栈深度<code>*</code>堆栈宽度。<br><font color="red" fontweight="Bold">pvParameters:</font>作为参数的指针，当任务创建时<br><font color="red" fontweight="Bold">uxPriority:</font>任务的优先级。包括MPU支持的系统可以选择在特权模式创建任务，通过设置优先级参数的portPRIVILEGE_BIT位。比如，创建一个特权任务在优先级2，则uxPriority 应当设置为(2|portPRIVILEGE_BIT)<br><font color="red" fontweight="Bold">pvCreatedTask:</font>回传一个句柄，以便创建的任务可以被关联。<font color="red" fontweight="Bold">返回值:pdPASS,</font>如果任务成功创建且添加到就绪列表，否则返回一个错误代码，见 projdefs.h</td>
<td><code>xTaskCreate(&amp;blink_task,&quot;LED_Task&quot;,configMINIMAL_STACK_SIZE,NULL,5,NULL);</code></td>
</tr>
</tbody></table>
<blockquote>
<p>blink_task创建</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">blink_task</span><span class="params">(<span class="keyword">void</span> *pvParameter)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line"><span class="keyword">bool</span> toggleFlag = <span class="literal">true</span>;</span><br><span class="line">ESP_LOGI(TAG, <span class="string">&quot;LED Blink Task开始...\n&quot;</span>);</span><br><span class="line">  	<span class="keyword">for</span>(;;)&#123;</span><br><span class="line">	ESP_LOGI(TAG, <span class="string">&quot;Turning %s...&quot;</span>,toggleFlag?<span class="string">&quot;On&quot;</span>:<span class="string">&quot;Off&quot;</span>);</span><br><span class="line">	vTaskDelay(<span class="number">1000</span> / portTICK_PERIOD_MS);</span><br><span class="line">	gpio_set_level(GPIO_LED_Pin,toggleFlag);</span><br><span class="line">	toggleFlag=!toggleFlag;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>主函数</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	bsp_GpioInit();</span><br><span class="line">	xTaskCreate(&amp;blink_task,<span class="string">&quot;LED_Task&quot;</span>,configMINIMAL_STACK_SIZE,<span class="literal">NULL</span>,<span class="number">5</span>,<span class="literal">NULL</span>);</span><br><span class="line">	<span class="comment">//for(;;); 似乎不能出现</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/c52e8408/LED_Task.PNG" alt="LED_Task_Debug">;</p>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>LED</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32_LEDC_PWM</title>
    <url>/posts/d213032/</url>
    <content><![CDATA[<p>LEDC(LED Control)是ESP32封装好的PWM定时器,可以产生16个通道，用于生成独立波形、驱动RGB灯、呼吸灯以及电机调速<br>本次Demo，使用LEDC控制LED作为呼吸灯。<br>呼吸灯原理分析：模拟人体呼吸，吸气和呼气各占1.5S，空气吸入量0%-&gt;100%,呼出量100%-&gt;0%变化。因此设计灯光占空比在3s内由0%-&gt;100%,然后下一个3s由100%-&gt;0%变化</p>
<a id="more"></a>
<h1 id="0-程序设计"><a href="#0-程序设计" class="headerlink" title="0.程序设计"></a>0.程序设计</h1><ul>
<li>使用Timer0作为LEDC的时钟源,频率为8KHz,定时器精度为13位</li>
<li>设置初始占空比为0,变化时长为3S,设置占空比对应的计数为[0%:0,100%:(2^13-1)=8000]</li>
</ul>
<blockquote>
<p>API介绍</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">函数名</th>
<th>描述</th>
<th>案例</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>ledc_channel_config_t</code></td>
<td>LEDC通道配置描述<br>speed_mode:输出速度<br>channel:0~7<br>intr_type:中断使能<br>通道占空比[0,2^bit_num-1]</td>
<td><code>constledc_channel_config_t ledc_timer;</code></td>
</tr>
<tr>
<td align="left"><code>esp_err_t ledc_channel_config(constledc_channel_config_t*ledc_conf)</code></td>
<td>LEDC通道配置<br><code>ESP_OK</code>:Success<br><code>ESP_ERR_INVALID_ARG</code>:Parameter error</td>
<td><code>ledc_channel_config(&amp;ledc_conf)</code></td>
</tr>
<tr>
<td align="left"><code>ledc_timer_config_t</code></td>
<td>LEDC定时器配置描述<br>speed_mode:输出速度<br>bit_num:计数精度的位数<br>timer_num:定时器选择[0~2]<br>freq_hz:定时器频率</td>
<td><code>ledc_timer_config_t ledc_timer</code></td>
</tr>
<tr>
<td align="left"><code>esp_err_t ledc_fade_func_install(intintr_alloc_flags)</code></td>
<td>注册渐变服务<br>intr_alloc_flags:0:无中断 1:中断</td>
<td><code>ledc_fade_func_install(0)</code></td>
</tr>
<tr>
<td align="left"><code>esp_err_t ledc_fade_start(ledc_mode_t speed_mode,ledc_channel_t channel,ledc_fade_mode_t wait_done)</code></td>
<td>渐变开始<br>speed_mode:LEDC速度模式<br>channel:使用的通道号<br>wait_done:堵塞直到渐变完成</td>
<td><code>    ledc_fade_start(ledc_channel[ch].speed_mode,ledc_channel[ch].channel, LEDC_FADE_NO_WAIT);</code></td>
</tr>
<tr>
<td align="left"><code>esp_err_t ledc_set_fade_with_time(ledc_mode_t   speed_mode,ledc_channel_t channel,int target_duty, int max_fade_time_ms)</code></td>
<td>渐变动作值设定<br>speed_mode:LEDC速度模式<br>channel:使用的通道号<br>target_duty:目标占空比<br>max_fade_time_ms:渐变时间</td>
<td><code>    ledc_fade_start(ledc_channel[ch].speed_mode,ledc_channel[ch].channel, LEDC_FADE_NO_WAIT);</code></td>
</tr>
</tbody></table>
<h1 id="1-引入必要头文件"><a href="#1-引入必要头文件" class="headerlink" title="1.引入必要头文件"></a>1.引入必要头文件</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/ledc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/gpio.h&quot;</span></span></span><br></pre></td></tr></table></figure>
<h1 id="2-LEDC硬件初始化"><a href="#2-LEDC硬件初始化" class="headerlink" title="2.LEDC硬件初始化"></a>2.LEDC硬件初始化</h1><ul>
<li>配置Timer0~3作为PWM定时器的时钟源,包括分辨率、频率、输出模式等</li>
<li>配置LEDC的输出通道，包括输出GPIO与CHANNEL的绑定、PWM时钟源绑定，占空比设置</li>
<li>统一注册LEDC的输出通道配置信息</li>
<li>LEDC使能淡入淡出功能</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_TOTAL_NUM         1				    <span class="comment">// PWM通道数，可以多个</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_HS_TIMER          LEDC_TIMER_0		    <span class="comment">// 选择PWM定时器0-3</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_HS_MODE           LEDC_HIGH_SPEED_MODE <span class="comment">// PWM输出模式</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_HS_CH0_GPIO       4				    <span class="comment">// LED控制器通道对应GPIO</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_HS_CH0_CHANNEL    LEDC_CHANNEL_0	    <span class="comment">// LED控制器通道号</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_TARGET_DUTY       8191					<span class="comment">// 渐增的最终目标占空比 2^13-1</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_FADE_TIME         3000					<span class="comment">// 渐变时间3000ms</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEDC_TIMER_FREQUENCT   8000				    <span class="comment">// 定时器计数频率 </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* TAG = <span class="string">&quot;LED Breath&quot;</span>;</span><br><span class="line"><span class="keyword">ledc_channel_config_t</span> ledc_channel[LEDC_TOTAL_NUM];</span><br><span class="line"><span class="keyword">int</span> ch=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_LEDCInit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 1.配置Timer0的作为PWM定时器</span></span><br><span class="line">    <span class="keyword">ledc_timer_config_t</span> ledc_timer = &#123; </span><br><span class="line">		.duty_resolution = LEDC_TIMER_13_BIT,	<span class="comment">// PWM占空比分辨率</span></span><br><span class="line">		.freq_hz = LEDC_TIMER_FREQUENCT,		<span class="comment">// PWM信号频率</span></span><br><span class="line">		.speed_mode = LEDC_HS_MODE,				<span class="comment">// 定时器模式</span></span><br><span class="line">		.timer_num = LEDC_HS_TIMER				<span class="comment">// 定时器序号</span></span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	ledc_timer_config(&amp;ledc_timer);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2.配置定时器的高速通道</span></span><br><span class="line">    <span class="comment">// 2.1 设置通道配置信息</span></span><br><span class="line"></span><br><span class="line">	ledc_channel[<span class="number">0</span>].channel = LEDC_HS_CH0_CHANNEL;    <span class="comment">// 使用的通道</span></span><br><span class="line">	ledc_channel[<span class="number">0</span>].duty = <span class="number">0</span>;                          <span class="comment">// 占空比</span></span><br><span class="line">	ledc_channel[<span class="number">0</span>].gpio_num = LEDC_HS_CH0_GPIO;       <span class="comment">// 通道对应的GPIO</span></span><br><span class="line">	ledc_channel[<span class="number">0</span>].speed_mode = LEDC_HS_MODE;         <span class="comment">// 定时器输出模式</span></span><br><span class="line">	ledc_channel[<span class="number">0</span>].timer_sel = LEDC_HS_TIMER;          <span class="comment">// 使用的Timer0作为PWM定时器</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 2.2 注册设置通道配置信息</span></span><br><span class="line">	<span class="keyword">for</span> (ch = <span class="number">0</span>; ch &lt; LEDC_TOTAL_NUM; ch++) &#123;</span><br><span class="line">		ledc_channel_config(&amp;ledc_channel[ch]);</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3. LEDC使能淡入淡出服务</span></span><br><span class="line">	ledc_fade_func_install(<span class="number">0</span>);					<span class="comment">// 注册LEDC服务，在调用前使用，参数是作为是否允许中断</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="3-功能实现"><a href="#3-功能实现" class="headerlink" title="3.功能实现"></a>3.功能实现</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_GpioInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ESP_LOGI(TAG, <span class="string">&quot;&gt;&gt;&gt;===== 1.GPIO初始化 =====&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	gpio_pad_select_gpio(LEDC_HS_CH0_GPIO); <span class="comment">// 选择要操作的GPIO</span></span><br><span class="line">	gpio_set_direction(LEDC_HS_CH0_GPIO, GPIO_MODE_OUTPUT); <span class="comment">// 设置GPIO为推挽输出模式</span></span><br><span class="line">	ESP_LOGI(TAG, <span class="string">&quot;&gt;&gt;&gt;===== GPIO初始化成功! =====&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bsp_LEDBreath</span><span class="params">(<span class="keyword">int</span> target_duty)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">	ESP_LOGI(TAG,<span class="string">&quot;PWM Duty From %d To %d&quot;</span>,target_duty==<span class="number">0</span>?<span class="number">0</span>:<span class="number">100</span>,target_duty==<span class="number">0</span>?<span class="number">100</span>:<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(ch=<span class="number">0</span>;ch&lt;LEDC_TOTAL_NUM;ch++)</span><br><span class="line">    &#123;</span><br><span class="line">        ledc_set_fade_with_time(</span><br><span class="line">			ledc_channel[ch].speed_mode,</span><br><span class="line">			ledc_channel[ch].channel, </span><br><span class="line">			target_duty,</span><br><span class="line">			LEDC_FADE_TIME);</span><br><span class="line">        ledc_fade_start(</span><br><span class="line">				ledc_channel[ch].speed_mode,</span><br><span class="line">				ledc_channel[ch].channel, </span><br><span class="line">				LEDC_FADE_NO_WAIT); <span class="comment">// 不堵塞</span></span><br><span class="line">    &#125;</span><br><span class="line">    vTaskDelay(LEDC_FADE_TIME/portTICK_PERIOD_MS);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> duty = LEDC_TARGET_DUTY;</span><br><span class="line">    bsp_GpioInit();</span><br><span class="line">    bsp_LEDCInit();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(;;)</span><br><span class="line">    &#123;</span><br><span class="line">        bsp_LEDBreath(duty);</span><br><span class="line">        <span class="keyword">if</span>(duty!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            duty=<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            duty=LEDC_TARGET_DUTY;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/d213032/LED_Breath.PNG" alt="LED_Breath">;</p>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>PWM</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32开发板介绍</title>
    <url>/posts/209c3d55/</url>
    <content><![CDATA[<p>购买ESP32开发板,掌握ESP32开发环境，API调用，主要为了熟悉并掌握MQTT功能，开发板购买链接如下:<br><a><a href="https://item.taobao.com/item.htm?spm=a2oq0.12575281.0.0.50111deb2Ij1As&amp;ft=t&amp;id=626366733674">https://item.taobao.com/item.htm?spm=a2oq0.12575281.0.0.50111deb2Ij1As&amp;ft=t&amp;id=626366733674</a></a></p>
<a id="more"></a>
<h1 id="1-开发板功能模块"><a href="#1-开发板功能模块" class="headerlink" title="1.开发板功能模块"></a>1.开发板功能模块</h1><h2 id="1-1-主控模块：ESP32-WROOM-32E"><a href="#1-1-主控模块：ESP32-WROOM-32E" class="headerlink" title="1.1 主控模块：ESP32-WROOM-32E"></a>1.1 主控模块：ESP32-WROOM-32E</h2><ul>
<li>32位微处理器</li>
<li>4M Flash</li>
<li>448KB ROM</li>
<li>520KB SRAM</li>
<li>16KB RTC SRAM</li>
<li>WiFi:802.11b/g/n 802.11n 信道频率：2412~2484MHz</li>
<li>Bluetooth: V4.2和LE标准</li>
<li>40MHz</li>
</ul>
<h2 id="1-2-开发板外设"><a href="#1-2-开发板外设" class="headerlink" title="1.2 开发板外设"></a>1.2 开发板外设</h2><p><img src="/posts/209c3d55/ESP32%E5%BC%80%E5%8F%91%E6%9D%BF.png" alt="ESP32开发板"></p>
<blockquote>
<p>LED指示灯</p>
</blockquote>
<p><img src="/posts/209c3d55/LED.png" alt="LED指示灯"></p>
<a href="#">Post not found: ESP32-LED</a>

<blockquote>
<p>电容触摸感应</p>
</blockquote>
<p><img src="/posts/209c3d55/%E8%A7%A6%E6%91%B8%E6%84%9F%E5%BA%94%E7%94%B5%E8%B7%AF.png" alt="触摸感应电路"></p>
<blockquote>
<p>CH340 USB转TTL自动下载电路</p>
</blockquote>
<p><img src="/posts/209c3d55/USBLoadProgram.png" alt="自动下载电路"></p>
<blockquote>
<p>光照传感器</p>
</blockquote>
<p><img src="/posts/209c3d55/%E5%85%89%E7%85%A7%E4%BC%A0%E6%84%9F%E5%99%A8.png" alt="光照传感器"></p>
<blockquote>
<p>WS2812B RGB模块</p>
</blockquote>
<p><img src="/posts/209c3d55/WS2812B_RGB%E6%A8%A1%E5%9D%97.png" alt="WS2812B_RGB模块"></p>
<blockquote>
<p>DHT1LED1温湿度传感器</p>
</blockquote>
<p><img src="/posts/209c3d55/DHT11%E6%B8%A9%E6%B9%BF%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8.png" alt="DHT1LED1温湿度传感器"></p>
<blockquote>
<p>ADXL345B三轴加速度传感器</p>
</blockquote>
<p><img src="/posts/209c3d55/AT24C02%E5%82%A8%E5%AD%98%E5%99%A8%E7%94%B5%E8%B7%AF.png" alt="ADXL345B三轴加速度传感器"></p>
<blockquote>
<p>AT24C02存储芯片</p>
</blockquote>
<p><img src="/posts/209c3d55/WS2812B_RGB%E6%A8%A1%E5%9D%97.png" alt="AT24C02存储芯片"></p>
<blockquote>
<p>红外接收头&amp;发送</p>
</blockquote>
<p><img src="/posts/209c3d55/%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%E5%A4%B4&%E5%8F%91%E9%80%81.png" alt="红外接收头&amp;发送"></p>
<blockquote>
<p>TF卡</p>
</blockquote>
<p><img src="/posts/209c3d55/TF.png" alt="TF卡模块"></p>
<blockquote>
<p>LCD触摸屏</p>
</blockquote>
<p><img src="/posts/209c3d55/LCD.png" alt="LCD模块"></p>
<h2 id="1-3-开发环境配置"><a href="#1-3-开发环境配置" class="headerlink" title="1.3 开发环境配置"></a>1.3 开发环境配置</h2><ol>
<li>安装.espressif和esp-idf-v4.2 两个软件安装包，并设置用户变量路径<br><img src="/posts/209c3d55/%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE.png" alt="变量路径设置"></li>
<li>安装git,python3.7工具 并将根目录放入到环境变量path中</li>
<li>新建cmd.exe的快捷方式，并重命名为”esp32_cmdtools”，启动命令设置如下：</li>
</ol>
<ul>
<li><p>目标:<code>C:\Windows\system32\cmd.exe /k &quot;&quot;D:\ESP32Compiler\.espressif\idf_cmd_init.bat&quot; &quot;D:\Anaconda3\envs\pytorch&quot; &quot;D:\Program Files\Git\cmd\&quot;&quot; </code></p>
</li>
<li><p>起始位置：<code>D\ESP32Compiler\esp-idf-v4.2</code></p>
</li>
</ul>
<p><img src="/posts/209c3d55/esp32_cmdtools.png" alt="esp32_cmdtools"></p>
<p>直接运行esp32_cmdtools文件，会进行环境编译</p>
<p><img src="/posts/209c3d55/ESP32_Compile.png" alt="esp32_compile"></p>
<ul>
<li>idf.py：打印输出帮助菜单</li>
<li>idf.py build 编译工程</li>
<li>idf.py -p PORT flash下载固件到芯片（PORT:COMx）</li>
<li>idf.py monitor 会调用idf_monitor工具来显示 ESP32 和 ESP32-S2 的串口输出。</li>
<li>一次性执行构建，烧写和监视 idf.py flash monitor</li>
<li>idf.py app 仅构建应用程序。</li>
<li>idf.py app-flash 仅烧写应用程序(会自动判断是否有源文件发生了改变而后重新构建应用程序)</li>
<li>idf.py erase_flash 擦除整块 Flash </li>
<li><ul>
<li>idf.py -p PORT erase_flash flash 擦除flash并下载</li>
</ul>
</li>
<li><ul>
<li>idf.py -p COM9 flash monitor从串口9下载并运行打开口显示设备调试信息 </li>
</ul>
</li>
<li><ul>
<li><font color="red" fontweight="bold">idf.py -p COM9 build flash monitor</font> 编译+下载+打印输出</li>
</ul>
</li>
</ul>
<ol start="4">
<li>VsCode配置 -&gt; Settings.json 添加一下代码<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;terminal.integrated.shell.windows&quot;</span>: <span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;terminal.integrated.shellArgs.windows&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;/k&quot;</span>,</span><br><span class="line">        <span class="string">&quot;D:\\ESP32Compiler\\esp-idf-v4.2\\export.bat&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;idf.showOnboardingOnInit&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;idf.espIdfPathWin&quot;</span>: <span class="string">&quot;D:\\ESP32Compiler\\esp-idf-v4.2&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;C_Cpp.updateChannel&quot;</span>: <span class="string">&quot;Insiders&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a href="#">Post not found: ESP32打印调试输出</a>

</li>
</ol>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32打印日志</title>
    <url>/posts/dd7e10ee/</url>
    <content><![CDATA[<p>ESP32日志报文打印API测试，掌握Debug,Info,Warn以及Error四种日志报文输出，获取ESP32芯片相关信息并打印输出</p>
<a id="more"></a>
<h1 id="1-日志打印API介绍"><a href="#1-日志打印API介绍" class="headerlink" title="1.日志打印API介绍"></a>1.日志打印API介绍</h1><table>
<thead>
<tr>
<th align="left">函数名</th>
<th>描述</th>
<th>案例</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>esp_chip_info(esp_chip_info_t* info)</code></td>
<td>info:芯片信息结构体指针</td>
<td><code>esp_chip_info(&amp;info)</code></td>
</tr>
<tr>
<td align="left"><code>ESP_LOGI(const char* tag,char* format_msg)</code></td>
<td><font color="white" fontweight="bold">打印信息:</font> [tag:format_msg]</td>
<td><code>ESP_LOGI(&quot;Info&quot;,&quot;This is a Information&quot;);</code><br><code>ESP_LOGI(&quot;Info&quot;,&quot;ESP32 Chip Cores Count: %d&quot;,chip_info.cores);</code><br><code>ESP_LOGI(&quot;Info&quot;,&quot;ESP32 Chip, WiFi%s%s,&quot;,(chip_info.features &amp; CHIP_FEATURE_BT)?&quot;/BT&quot;:&quot;&quot;,(chip_info.features&amp;CHIP_FEATURE_BLE) ? &quot;/BLE&quot;:&quot;&quot;);</code><br><code>ESP_LOGI(&quot;Info&quot;,&quot;SPI Flash Chip Size: %dMByte %s flash&quot;,spi_flash_get_chip_size()/(1024*1024),(chip_info.features &amp; CHIP_FEATURE_EMB_FLASH)?&quot;Embedded&quot; : &quot;External&quot;);</code></td>
</tr>
<tr>
<td align="left"><code>esp_base_mac_addr_get(uint8_t MAC[6])</code></td>
<td>WiFi的MAC地址</td>
<td><code>esp_base_mac_addr_get(MAC)</code><br><code>ESP_LOGI(&quot;Info&quot;, &quot;Base MAC Addr :  %02X.%02X.%02X.%02X.%02X.%02X&quot;,MAC[0],MAC[1],MAC[2],MAC[3],MAC[4],MAC[5]);</code></td>
</tr>
<tr>
<td align="left">ESP_LOGW(const char* tag,char* msg)</td>
<td>打印报警:[tag,msg]</td>
<td>ESP_LOGW(“Warn”, “This is a Warn”)</td>
</tr>
<tr>
<td align="left">ESP_LOGE(const char* tag,char* msg)</td>
<td>打印错误:[tag,msg]</td>
<td>ESP_LOGE(“Error”, “This is a Error”)</td>
</tr>
<tr>
<td align="left">ESP_LOGD (const char* tag,char* msg)</td>
<td>打印调试:[tag,msg]</td>
<td>ESP_LOGD(“Debug”, “This is a Debug”)</td>
</tr>
<tr>
<td align="left">ESP_LOGV(const char* tag,char* msg)</td>
<td>详细:[tag,msg]</td>
<td>ESP_LOGV(“Detial”, “This is a Detail”)</td>
</tr>
<tr>
<td align="left">esp_restart()</td>
<td>软件复位</td>
<td>esp_restart();</td>
</tr>
</tbody></table>
<h1 id="2-功能设计"><a href="#2-功能设计" class="headerlink" title="2.功能设计"></a>2.功能设计</h1><p>Info:CPU基本信息 如Flash Size,Core Num,RAM Size等<br>打印输出: Warn,Error信息</p>
<blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_spi_flash.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;esp_log.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">static</span> <span class="keyword">char</span> *InfoTag = <span class="string">&quot;Info&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">static</span> <span class="keyword">char</span> *WarnTag = <span class="string">&quot;Warn&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">static</span> <span class="keyword">char</span> *ErrorTag = <span class="string">&quot;Error&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">uint8_t</span> MAC[<span class="number">6</span>];</span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt;===== 打印ESP32芯片信息 =====&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	<span class="comment">// 打印芯片信息</span></span><br><span class="line">	<span class="keyword">esp_chip_info_t</span> chip_info;</span><br><span class="line">	esp_chip_info(&amp;chip_info);</span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32芯片内核数目: %d&quot;</span>,chip_info.cores);</span><br><span class="line">	<span class="keyword">if</span>(chip_info.model == <span class="number">1</span>)&#123;</span><br><span class="line">		ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32芯片架构: ESP32&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(chip_info.model == <span class="number">2</span>)&#123;</span><br><span class="line">		ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32芯片架构: ESP32S2&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32芯片架构: Unknown Model&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32芯片特征量: %d&quot;</span>,chip_info.features);</span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32芯片版本号: %d&quot;</span>,chip_info.revision);</span><br><span class="line"></span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32芯片支持通讯方式: WIFI%s%s, &quot;</span>,</span><br><span class="line">			(chip_info.features &amp; CHIP_FEATURE_BT) ? <span class="string">&quot;/BT&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">			(chip_info.features &amp; CHIP_FEATURE_BLE) ? <span class="string">&quot;/BLE&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; ESP32 Flash容量: %dMB %s flash&quot;</span>, spi_flash_get_chip_size() / (<span class="number">1024</span> * <span class="number">1024</span>),</span><br><span class="line">			(chip_info.features &amp; CHIP_FEATURE_EMB_FLASH) ? <span class="string">&quot;Embedded&quot;</span> : <span class="string">&quot;External&quot;</span>);</span><br><span class="line"></span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; Free Heap Size is:  %d B&quot;</span>,esp_get_free_heap_size());</span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; Free Internal Heap Size is:  %d B&quot;</span>,esp_get_free_internal_heap_size());</span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; Free minimum Heap Size is:  %d B&quot;</span>,esp_get_minimum_free_heap_size());</span><br><span class="line"></span><br><span class="line">	esp_base_mac_addr_get(MAC);</span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt; 网络MAC地址:  %02X.%02X.%02X.%02X.%02X.%02X&quot;</span>,MAC[<span class="number">0</span>],MAC[<span class="number">1</span>],MAC[<span class="number">2</span>],MAC[<span class="number">3</span>],MAC[<span class="number">4</span>],MAC[<span class="number">5</span>]);</span><br><span class="line"></span><br><span class="line">	ESP_LOGI(InfoTag, <span class="string">&quot;&gt;&gt;&gt;===== ESP32芯片介绍结束 =====&lt;&lt;&lt;&quot;</span>);</span><br><span class="line">	vTaskDelay(<span class="number">1000</span> / portTICK_PERIOD_MS);</span><br><span class="line"></span><br><span class="line">	ESP_LOGW(WarnTag, <span class="string">&quot;&gt;&gt;&gt; This is a Warning!&quot;</span>);</span><br><span class="line"></span><br><span class="line">	ESP_LOGE(ErrorTag, <span class="string">&quot;&gt;&gt;&gt; This is a Error!&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		vTaskDelay(<span class="number">1000</span> / portTICK_PERIOD_MS);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// ESP_LOGI(TAG, &quot;Restarting now.&quot;);</span></span><br><span class="line">	<span class="comment">// esp_restart();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出结果</p>
</blockquote>
<p><img src="/posts/dd7e10ee/DebugOutput.PNG" alt="日志输出"></p>
<a href="#">Post not found: ESP32-LED</a>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>打印日志信息</tag>
      </tags>
  </entry>
  <entry>
    <title>MOSFET电气元件</title>
    <url>/posts/42bad010/</url>
    <content><![CDATA[<p>MOSFET使用注意事项</p>
<a id="more"></a>

<h1 id="MOSFET介绍"><a href="#MOSFET介绍" class="headerlink" title="MOSFET介绍"></a>MOSFET介绍</h1><h1 id="1-1-MOSFET作为开关管使用"><a href="#1-1-MOSFET作为开关管使用" class="headerlink" title="1.1 MOSFET作为开关管使用"></a>1.1 MOSFET作为开关管使用</h1><p>箭头流入G极的是 NMOSFET<br>箭头流出G极的是 PMOSFET<br>上述箭头无论流入/出 都是S极(源)</p>
<p>PMOS: VGS=0 导通 VGS=1 截止<br>NMOS: VGS=0 截止 VGS=1 导通</p>
<h2 id="1-2-性能指标"><a href="#1-2-性能指标" class="headerlink" title="1.2 性能指标"></a>1.2 性能指标</h2><blockquote>
<p>VDSS最大漏-源电压</p>
</blockquote>
<p>漏极与源极之间的最大压差，否者会发生雪崩击穿</p>
<blockquote>
<p>VGS最大栅-源电压</p>
</blockquote>
<p>栅-源两级之间最大压差，<font color="red">可以在GS之间并联一个稳压二极管或单相/双向TVS管</font></p>
<blockquote>
<p>ID 连续漏电电流</p>
</blockquote>
<p>MOS管在正常温度下，可允许通过的最大电流</p>
<blockquote>
<p>VGS(th) 栅-源电压阈值</p>
</blockquote>
<p>MOSFET导通时使用的最小阈值</p>
<blockquote>
<p>RDS(on) 导通电阻</p>
</blockquote>
<p>漏-源电阻</p>
<blockquote>
<p>Ciss:输入电容</p>
</blockquote>
<p>将DS短接，用交流信号测得GS之间的电容(即Ciss=Cgs+Cgd),寄生电容充放电会对MOSFET开断延时有影响</p>
<blockquote>
<p>Qgs、Qgd和Qg</p>
</blockquote>
<p>各个电极之间的电荷</p>
<h2 id="1-3-IRF7480MTRPbF-DirectFET®-N-Channel-Power-MOSFET"><a href="#1-3-IRF7480MTRPbF-DirectFET®-N-Channel-Power-MOSFET" class="headerlink" title="1.3 IRF7480MTRPbF:DirectFET® N-Channel Power MOSFET"></a>1.3 IRF7480MTRPbF:DirectFET® N-Channel Power MOSFET</h2><blockquote>
<p>芯片手册参数</p>
</blockquote>
<p><img src="/posts/42bad010/ID.PNG" alt="ID&amp;VGS(max)"></p>
<p><img src="/posts/42bad010/VDSS.PNG" alt="ID&amp;VGS(max)"></p>
<p>设计电路主要主意:</p>
<ul>
<li>VDSS不能超过40V,为保留一定裕度，两端电压不能超过24V</li>
<li>ID=137A,流过电流不能操作100A</li>
<li>VGS=[-20,20V],栅源之间电压不能超过20V，可以考虑添加双向TVS</li>
<li>VGS(th)=3V，MOS驱动芯片的输出电压能力要大于3V</li>
<li>相同型号MOS并联，可增大一倍ID电流</li>
<li>RDS=1.2m欧</li>
</ul>
<h1 id="2-电路应用"><a href="#2-电路应用" class="headerlink" title="2. 电路应用"></a>2. 电路应用</h1><h2 id="2-1-电源防反插-PMOS"><a href="#2-1-电源防反插-PMOS" class="headerlink" title="2.1 电源防反插(PMOS)"></a>2.1 电源防反插(PMOS)</h2><p><img src="/posts/42bad010/%E7%94%B5%E6%BA%90%E9%98%B2%E5%8F%8D%E6%8E%A5.PNG" alt="电源防反插"></p>
<h2 id="2-2-双电源供电-USB防反冲"><a href="#2-2-双电源供电-USB防反冲" class="headerlink" title="2.2 双电源供电-USB防反冲"></a>2.2 双电源供电-USB防反冲</h2><p><img src="/posts/42bad010/PMOS_USB%E9%98%B2%E5%8F%8D%E5%86%B2.PNG" alt="PMOS_USB防反冲电流"></p>
<h2 id="2-3-常用MOSFET"><a href="#2-3-常用MOSFET" class="headerlink" title="2.3 常用MOSFET"></a>2.3 常用MOSFET</h2><ul>
<li>IRF540</li>
<li>IRF640</li>
<li>IRF840</li>
<li>SI2301</li>
<li>SI2302</li>
</ul>
<h2 id="电气元件3D模型"><a href="#电气元件3D模型" class="headerlink" title="电气元件3D模型"></a>电气元件3D模型</h2><p><a href="https://www.snapeda.com/">SnapEDA</a></p>
<p><a href="https://www.3dcontentcentral.com/">3dcontentcentral</a></p>
]]></content>
      <categories>
        <category>Hardware</category>
      </categories>
      <tags>
        <tag>MOSFET</tag>
      </tags>
  </entry>
  <entry>
    <title>开关电源</title>
    <url>/posts/24b120d3/</url>
    <content><![CDATA[<p>开关电源设计介绍</p>
<a id="more"></a>

<h1 id="1-Buck-amp-Boost-降压-amp-升压电路"><a href="#1-Buck-amp-Boost-降压-amp-升压电路" class="headerlink" title="1.Buck &amp; Boost 降压 &amp; 升压电路"></a>1.Buck &amp; Boost 降压 &amp; 升压电路</h1><h2 id="1-1-工作原理图"><a href="#1-1-工作原理图" class="headerlink" title="1.1 工作原理图"></a>1.1 工作原理图</h2><blockquote>
<p>Buck降压原理图</p>
</blockquote>
<p><img src="/posts/24b120d3/1_Buck%E5%8E%9F%E7%90%86%E5%9B%BE.PNG" alt="Buck降压原理图"></p>

\[{V_{out}} = {V_{in}}*\frac{{{T_{on}}}}{T}\]


<blockquote>
<p>Boost升压原理图</p>
</blockquote>
<p><img src="/posts/24b120d3/2_Boost%E5%8E%9F%E7%90%86%E5%9B%BE.PNG" alt="Boost升压原理图"></p>

\[{U_o} = {U_i}/(1 - \frac{{{T_{on}}}}{{{T_{on}} + {T_{off}}}})\]




<blockquote>
<p>Buck-Boost 降压-升压原理图</p>
</blockquote>
<p><img src="/posts/24b120d3/3_Buck_Boost%E5%8E%9F%E7%90%86%E5%9B%BE.PNG" alt="Buck&amp;Boost降压&amp;升压原理图"></p>

\[{U_o} = {U_i}*\frac{{T_{on}^1}}{{T_{on}^1 + T_{off}^1}}/(1 - \frac{{T_{on}^2}}{{T_{on}^2 + T_{off}^2}})\]


<h2 id="1-2-开关电源的基本元件"><a href="#1-2-开关电源的基本元件" class="headerlink" title="1.2 开关电源的基本元件"></a>1.2 开关电源的基本元件</h2><div class="note primary">
            <p>1.电子开关</p>
          </div>

<ul>
<li>三极管/IGBT/NMOS,以后趋势:NMOS</li>
<li>内置NMOS:Iout&lt;5A</li>
<li>外置NMOS:NMOS可并联使用，从而提高电流</li>
</ul>
<div class="note primary">
            <p>2.二极管 <font color="red">注意二极管开关频率，要高于Buck/Boost的开关频率</font></p>
          </div>

<ul>
<li>肖特基二极管</li>
<li>快恢复/超快恢复二极管</li>
<li>推荐: </li>
</ul>
<p>1A/40V: 1N5819</p>
<p>3A/40V: 1N5822 MBR340 SK34 30WQ04 31DQ04 SR304</p>
<p>5A/40V: 1N5825 SR504 SB540 50WQ04</p>
<p>8A/40V: SR840</p>
<p>16A/40V: SR1640</p>
<div class="note primary">
            <p>3.电感 选择屏蔽电感</p>
          </div>

<ul>
<li>直流电阻DCR:采用DCR较小的电感</li>
<li>通流能力Irms</li>
<li>饱和电流Isat</li>
<li>电流需满足:I&lt;0.8*MAX(Irms,Isat)</li>
</ul>
<div class="note primary">
            <p>4.电容</p>
          </div>

<ul>
<li>输入电容: 电解电容并上0.1uF电容</li>
<li>输出电容: 希望ESR较小,使用MLCC X7R 固态电容 (钽电容 耐压最是3倍的输出) 并上 0.1uF电容</li>
</ul>
<h2 id="1-3-芯片推荐"><a href="#1-3-芯片推荐" class="headerlink" title="1.3 芯片推荐"></a>1.3 芯片推荐</h2><blockquote>
<p>LM2596/LM2576 ￥1</p>
</blockquote>
<ul>
<li>输入电压: Max 40V</li>
<li>输出电压: 1.2~37V</li>
<li>输出电流: Max 3A</li>
<li>开关频率: 150KHz (频率越高，效率越高)</li>
</ul>
<blockquote>
<p>MC34063A/MC33063 ￥0.2 （支持升压/降压开关稳压芯片）</p>
</blockquote>
<ul>
<li>输入电压: 2.5~40V</li>
<li>输出电压: 1.25~40V</li>
<li>输出电流: Max 1.5A</li>
<li>开关频率: 100KHz (频率越高，效率越高)</li>
</ul>
]]></content>
      <categories>
        <category>Hardware</category>
      </categories>
      <tags>
        <tag>开关电源</tag>
        <tag>Buck</tag>
        <tag>Boost</tag>
      </tags>
  </entry>
  <entry>
    <title>电阻电容电感</title>
    <url>/posts/fab98bd8/</url>
    <content><![CDATA[<p>电阻电容电感使用</p>
<a id="more"></a>

<h1 id="4-二极管作用"><a href="#4-二极管作用" class="headerlink" title="4.二极管作用"></a>4.二极管作用</h1><h2 id="4-1-防反接"><a href="#4-1-防反接" class="headerlink" title="4.1 防反接"></a>4.1 防反接</h2><p>不建议使用，一般使用PMOS</p>
<p><img src="/posts/fab98bd8/4_1%E9%98%B2%E5%8F%8D%E6%8E%A51.PNG" alt="电源防反插"></p>
<p><img src="/posts/fab98bd8/4_1%E9%98%B2%E5%8F%8D%E6%8E%A52.PNG" alt="电源防反插"></p>
<p>二极管耐压值为:</p>

\[{U_{\rm{D}}} \ge \sqrt 2 {U_i}\]




<h2 id="4-2-给电感续流"><a href="#4-2-给电感续流" class="headerlink" title="4.2 给电感续流"></a>4.2 给电感续流</h2><p>当存在感性负载时，断路时需要使用二极管进行放电（电机驱动，电磁继电器,Buck-Boost电路）</p>
<p><img src="/posts/fab98bd8/4_2%E7%94%B5%E6%84%9F%E7%BB%AD%E6%B5%811.PNG" alt="电感续流"></p>
<blockquote>
<p>Buck电路</p>
</blockquote>
<p><img src="/posts/fab98bd8/4_2%E7%94%B5%E6%84%9F%E7%BB%AD%E6%B5%812.PNG" alt="电感续流"></p>
<h2 id="4-3-限幅"><a href="#4-3-限幅" class="headerlink" title="4.3 限幅"></a>4.3 限幅</h2><blockquote>
<p>[-0.7V,0.7V]限幅</p>
</blockquote>
<p><img src="/posts/fab98bd8/4_3%E9%99%90%E5%B9%851.PNG" alt="限幅"></p>
]]></content>
  </entry>
  <entry>
    <title>HexTag标签插件使用</title>
    <url>/posts/761ddf72/</url>
    <content><![CDATA[<p>Tag Plugin是一种支持Hexo以标签插件形式来标准Markdown中显示具有自定义尺寸的图像。</p>
<a id="more"></a>
<h1 id="1-文本居中引用-Centered-Quote"><a href="#1-文本居中引用-Centered-Quote" class="headerlink" title="1.文本居中引用- Centered Quote"></a>1.文本居中引用- Centered Quote</h1><blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125;世间所有的相遇，都是久别重逢&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>世间所有的相遇，都是久别重逢</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<h1 id="2-提示块-Note"><a href="#2-提示块-Note" class="headerlink" title="2.提示块 - Note"></a>2.提示块 - Note</h1><blockquote>
<p>配置 主题配置文件_config.yml</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Note tag (bs-callout).</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  # 风格</span><br><span class="line">  style: flat</span><br><span class="line">  # 要不要图标</span><br><span class="line">  icons: true</span><br><span class="line">  # 圆角矩形</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure>
<blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<div class="note default">
            <p>default 提示块标签</p>
          </div>

<div class="note primary">
            <p>primary 提示块标签</p>
          </div>

<div class="note success">
            <p>success 提示块标签</p>
          </div>

<div class="note info">
            <p>info 提示块标签</p>
          </div>

<div class="note warning">
            <p>warning 提示块标签</p>
          </div>

<div class="note danger">
            <p>danger 提示块标签</p>
          </div>

<h1 id="3-标签-Label"><a href="#3-标签-Label" class="headerlink" title="3.标签 - Label"></a>3.标签 - Label</h1><blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% label default@默认 %&#125; </span><br><span class="line">&#123;% label primary@主要 %&#125; </span><br><span class="line">&#123;% label success@成功 %&#125; </span><br><span class="line">&#123;% label info@信息 %&#125; </span><br><span class="line">&#123;% label warning@警告 %&#125; </span><br><span class="line">&#123;% label danger@危险 %&#125; </span><br><span class="line">&#123;% label success@这是成功的信息%&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<span class="label default">默认</span> 
<span class="label primary">主要</span> 
<span class="label success">成功</span> 
<span class="label info">信息</span> 
<span class="label warning">警告</span> 
<span class="label danger">危险</span> 
<span class="label success">这是成功的信息</span>

<h1 id="4-选项卡-Tabs"><a href="#4-选项卡-Tabs" class="headerlink" title="4.选项卡 - Tabs"></a>4.选项卡 - Tabs</h1><blockquote>
<p>修改主题配置文件</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Tabs tag</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: true</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: 0</span><br></pre></td></tr></table></figure>
<blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs tab,1 %&#125; 名字为tab，默认在第1个选项卡，如果是-1则隐藏</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**选项卡 1**</span> </span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**选项卡 2**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab A --&gt;</span><br><span class="line"><span class="strong">**选项卡 3**</span> 名字为A</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><a href="#tab-1">tab 1</a></li><li class="tab"><a href="#tab-2">tab 2</a></li><li class="tab"><a href="#tab-3">A</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-1"><p><strong>选项卡 1</strong> </p></div><div class="tab-pane" id="tab-2"><p><strong>选项卡 2</strong></p></div><div class="tab-pane" id="tab-3"><p><strong>选项卡 3</strong> 名字为A</p></div></div></div>

<h1 id="5-按钮-Button"><a href="#5-按钮-Button" class="headerlink" title="5.按钮 - Button"></a>5.按钮 - Button</h1><blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>描述</p>
</blockquote>
<ul>
<li>url : 绝对或相对 URL</li>
<li>icon : FontAwesome 图标名称（开头没有’fa-‘）。如果未指定文本，则为必需</li>
<li>[class] : FontAwesome 类：fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5X ，可选参数。</li>
<li>[title] : 鼠标悬停时的工具提示，可选参数。</li>
</ul>
<blockquote>
<p>Example</p>
</blockquote>
<p>代码:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span>&#123;% button https://zhenxingblog.site/ ,首页,home fa-fw,这是ZhenXing的个人博客首页%&#125; &#123;% button https://www.iqiyi.com/ ,观影,film fa-fw,爱奇艺%&#125; &#123;% button https://www.cnki.net/,阅读,book fa-fw,中国知网%&#125;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>效果:</p>
<div class="text-center"><div><a class="btn" href="https://zhenxingblog.site/ " title="这是ZhenXing的个人博客首页">
            <i class="fa fa-home fa-fw"></i>首页
          </a> <a class="btn" href="https://www.iqiyi.com/ " title="爱奇艺">
            <i class="fa fa-film fa-fw"></i>观影
          </a> <a class="btn" href="https://www.cnki.net/" title="中国知网">
            <i class="fa fa-book fa-fw"></i>阅读
          </a></div></div>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt项目配置文件pro和pri介绍</title>
    <url>/posts/e6f2032/</url>
    <content><![CDATA[<p>QT工程管理文件配置介绍</p>
<a id="more"></a>

<h1 id="1-pro文件配置"><a href="#1-pro文件配置" class="headerlink" title="1.pro文件配置"></a>1.pro文件配置</h1><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">TEMPLATE = app      <span class="comment"># app:生成exe可执行文件 lib:生成dll库</span></span><br><span class="line">LANGUAGE = C++      <span class="comment"># 使用C++开发</span></span><br><span class="line">QT += widgets       <span class="comment"># 添加QT控件库</span></span><br><span class="line">CONFIG += console   <span class="comment"># 使能打印终端</span></span><br><span class="line">TARGET = appName    <span class="comment"># exe的文件名</span></span><br><span class="line">HEADERS += h1.hpp \ </span><br><span class="line">            h2.hpp      <span class="comment"># 添加头文件</span></span><br><span class="line"></span><br><span class="line">SOURCE += h1.cpp \</span><br><span class="line">            h2.cpp      <span class="comment"># 添加源文件</span></span><br><span class="line"></span><br><span class="line">FORMS += dialog.ui      <span class="comment"># 添加ui文件</span></span><br><span class="line"></span><br><span class="line">DESETDIR = ../../../bin     <span class="comment"># 最终目标可执行文件的存放路径</span></span><br><span class="line">OBJECTS_DIR = ../../../obj  <span class="comment"># 程序生成的中间临时文件的存放路径</span></span><br><span class="line">MOC_DIR = ../../../obj/moc  <span class="comment"># moc命令编译生成临时文件的存放路径</span></span><br><span class="line"></span><br><span class="line">$<span class="variable">$(path)</span>                    <span class="comment"># 使用环境变量</span></span><br><span class="line">$$LANGUAGE                  <span class="comment"># 使用脚本变量</span></span><br><span class="line">var1=&#x27;$$LANGUAGE&#x27;_suffix         <span class="comment"># 变量名加后缀</span></span><br><span class="line">message(var1)               <span class="comment"># 打印信息</span></span><br></pre></td></tr></table></figure>
<h2 id="1-1-EXE-or-Dll-生成-–-TEMPLATE"><a href="#1-1-EXE-or-Dll-生成-–-TEMPLATE" class="headerlink" title="1.1 EXE or Dll 生成 – TEMPLATE"></a>1.1 EXE or Dll 生成 – TEMPLATE</h2><table>
<thead>
<tr>
<th align="left">函数名</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>TEMPLATE=app</code></td>
<td>本项目生成一个EXE</td>
</tr>
<tr>
<td align="left"><code>TEMPLATE=lib</code></td>
<td>本项目生成一个dll</td>
</tr>
<tr>
<td align="left"><code>TEMPLATE=subdirs</code></td>
<td>表示本项目将扫描指定的子目录合集，与SUBDIRS配合使用</td>
</tr>
</tbody></table>
<h2 id="1-2-使用C-开发语言-–-LANGUAGE"><a href="#1-2-使用C-开发语言-–-LANGUAGE" class="headerlink" title="1.2 使用C++开发语言 – LANGUAGE"></a>1.2 使用C++开发语言 – LANGUAGE</h2><p><code>LANGUAGE = C++</code></p>
<h2 id="1-3-生成目标文件名称-–-TARGET"><a href="#1-3-生成目标文件名称-–-TARGET" class="headerlink" title="1.3 生成目标文件名称 – TARGET"></a>1.3 生成目标文件名称 – TARGET</h2><p><code>TARGET = xxxx</code> 根据TEMPLATE的设置会生成相应的xxxx.dll or xxxx.exe文件</p>
<h2 id="1-4-debug-、-release-or-both-–-CONFIG"><a href="#1-4-debug-、-release-or-both-–-CONFIG" class="headerlink" title="1.4 debug 、 release or both – CONFIG"></a>1.4 debug 、 release or both – CONFIG</h2><ul>
<li>CONFIG += aaa bbb ccc  # 增加配置项</li>
<li>CONFIG -= aaa bbb ccc  # 删除配置项</li>
</ul>
<blockquote>
<p>配置项取值</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">序号</th>
<th align="left">配置值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="left">release</td>
<td>以发布版本构建项目 <code>CONFIG+=release</code> or 取消: <code>CONFIG-=release</code></td>
</tr>
<tr>
<td align="center">2</td>
<td align="left">debug</td>
<td>以调试版本构建项目 <code>CONFIG+=debug</code> or 取消: <code>CONFIG -= debug</code></td>
</tr>
<tr>
<td align="center">3</td>
<td align="left">debug_and_release</td>
<td>以debug和release两个版本进行构建 <code>CONFIG+=debug_and_release</code></td>
</tr>
<tr>
<td align="center">4</td>
<td align="left">precompile_header</td>
<td>表示可以在项目中使用预编译头文件 <code>CONFIG+=precompile_header</code></td>
</tr>
<tr>
<td align="center">5</td>
<td align="left">rtti</td>
<td>启用RTTI支持，关闭时使用rtti_off</td>
</tr>
<tr>
<td align="center">6</td>
<td align="left">stl</td>
<td>启用STL支持,关闭时使用stl_off</td>
</tr>
<tr>
<td align="center">7</td>
<td align="left">thread</td>
<td>表示支持多线程，当CONFIG取值中包含<code>qt</code>时使用,默认使用</td>
</tr>
<tr>
<td align="center">8</td>
<td align="left">warn_on</td>
<td>表示编译器尽可能的多输出报警信息</td>
</tr>
<tr>
<td align="center">9</td>
<td align="left">warn_off</td>
<td>表示编译器尽可能的少输出报警信息</td>
</tr>
<tr>
<td align="center">10</td>
<td align="left">qt</td>
<td>表示需要链接qt的类库，一般只在pro主文件中使用，否者一般在开发服务类应用库时，才会使用该配置</td>
</tr>
<tr>
<td align="center">11</td>
<td align="left">C++11</td>
<td>启用C++11支持</td>
</tr>
<tr>
<td align="center">12</td>
<td align="left">C++14</td>
<td>启用C++14支持</td>
</tr>
</tbody></table>
<h2 id="1-5-使用QT模块-–-QT"><a href="#1-5-使用QT模块-–-QT" class="headerlink" title="1.5 使用QT模块 – QT"></a>1.5 使用QT模块 – QT</h2><blockquote>
<p><code>QT += xxx xxx xxx</code> or <code>QT -= xxx xxx</code></p>
</blockquote>
<h2 id="1-6-各种DIR和PATH的使用"><a href="#1-6-各种DIR和PATH的使用" class="headerlink" title="1.6 各种DIR和PATH的使用"></a>1.6 各种DIR和PATH的使用</h2><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">子项</th>
<th align="left">描述</th>
<th align="left">案例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left"><code>INCLUDEPATH</code></td>
<td align="left">描述构建项目时，使用的include目录<br><strong><font color="red">如果包含UI资源，需要先配置UI_DIR路径，在将其添加到INCLUDEPATH中</font></strong></td>
<td align="left"><code>INCLUDEPATH=$$(PROJECTHOME)/include</code> <br> <font color="red">UI_DIR=$$(PROJECTHOME)/obj/demo/dialog/ui<br>INCLUDEPATH += UI_DIR</font></td>
</tr>
<tr>
<td align="left">2</td>
<td align="left"><code>DESTDIR</code></td>
<td align="left">项目生成dll或exe的路径</td>
<td align="left"><code>DESTDIR = $$(PROJECTHOME)/lib</code></td>
</tr>
<tr>
<td align="left">3</td>
<td align="left"><code>MOC_DIR</code></td>
<td align="left">moc命令生成文件的存放目录</td>
<td align="left"><code>MOC_DIR = $$(PROJECTHOME)/obj/moc</code></td>
</tr>
<tr>
<td align="left">4</td>
<td align="left"><code>OBJECTS_DIR</code></td>
<td align="left">生成中间件的存放路径</td>
<td align="left"><code>OBJECTS_DIR = $$(PROJECTHOME)/obj</code></td>
</tr>
<tr>
<td align="left">5</td>
<td align="left"><code>RCC_DIR</code></td>
<td align="left">qt资源编译生成路径</td>
<td align="left"><code>RCC_DIR = $$(PROJECTHOME)/obj/resources</code></td>
</tr>
<tr>
<td align="left">6</td>
<td align="left"><code>UI_DIR</code></td>
<td align="left">项目生成dll或exe的路径</td>
<td align="left"><code>UI_DIR = $$(PROJECTHOME)/obj/ui</code></td>
</tr>
</tbody></table>
<h2 id="1-7-FORMS使用"><a href="#1-7-FORMS使用" class="headerlink" title="1.7 FORMS使用"></a>1.7 FORMS使用</h2><p>用于描述项目中使用的UI文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FORMS &#x3D; dialog.ui \ </span><br><span class="line">    login.ui</span><br></pre></td></tr></table></figure>
<h2 id="1-8-添加头文件、源文件-–-HEADERS-SOURCES"><a href="#1-8-添加头文件、源文件-–-HEADERS-SOURCES" class="headerlink" title="1.8 添加头文件、源文件 – HEADERS SOURCES"></a>1.8 添加头文件、源文件 – HEADERS SOURCES</h2><p>用于描述项目中用到的头(源)文件列表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HEADERS &#x3D; abc.pro \ </span><br><span class="line">    animate&#x2F;files&#x2F;myfile.h \ </span><br><span class="line">    $$(PROJECTHOME)&#x2F;include&#x2F;base.h</span><br></pre></td></tr></table></figure>
<h2 id="1-9-添加资源-–-RESOURCES"><a href="#1-9-添加资源-–-RESOURCES" class="headerlink" title="1.9 添加资源 – RESOURCES"></a>1.9 添加资源 – RESOURCES</h2><p>用于描述项目使用的资源描述文件(*.qrc):<code>RESOURCES += mdi.qrc</code></p>
<h2 id="1-10-添加库文件-–-LIBS"><a href="#1-10-添加库文件-–-LIBS" class="headerlink" title="1.10 添加库文件 – LIBS"></a>1.10 添加库文件 – LIBS</h2><blockquote>
<p><code>-l</code>:表示库文件名 <code>LIBS += -lmycomm</code></p>
</blockquote>
<blockquote>
<p>‘-L’:表示库文件路径 当一个文件夹中包含多个lib文件时</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LIBS +&#x3D; -L&#x2F;usr&#x2F;local&#x2F;myprogram&#x2F;lib \ </span><br><span class="line">        -lmcomm \ </span><br><span class="line">        -lfesp</span><br></pre></td></tr></table></figure>
<h2 id="1-11-描述项目中用到的翻译文件-–-TRANSLATIONS"><a href="#1-11-描述项目中用到的翻译文件-–-TRANSLATIONS" class="headerlink" title="1.11 描述项目中用到的翻译文件 – TRANSLATIONS"></a>1.11 描述项目中用到的翻译文件 – TRANSLATIONS</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TRANSLATIONS &#x3D; translations&#x2F;graphplatform_zh_CN.ts</span><br></pre></td></tr></table></figure>
<h1 id="2-pri配置文件"><a href="#2-pri配置文件" class="headerlink" title="2. pri配置文件"></a>2. pri配置文件</h1><h2 id="1-关键字"><a href="#1-关键字" class="headerlink" title="1.关键字"></a>1.关键字</h2><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">关键字</th>
<th align="left">描述</th>
<th align="left">案例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left"><code>include</code></td>
<td align="left">在pro中引入pri</td>
<td align="left"><code>include(../base.pri)</code></td>
</tr>
<tr>
<td align="left">2</td>
<td align="left"><code>unix</code>/<code>win32</code></td>
<td align="left">用于定义在不同平台下构建项目时的配置</td>
<td align="left"><code>unix&#123; ... &#125;</code><br><code>win32&#123; ... &#125;</code></td>
</tr>
<tr>
<td align="left">3</td>
<td align="left"><code>DEFINES</code></td>
<td align="left">在pri中定义宏</td>
<td align="left"><code>DEFINES *= xxxx</code></td>
</tr>
<tr>
<td align="left">4</td>
<td align="left"><code>CONFIG</code></td>
<td align="left">项目配置参数</td>
<td align="left"><code>CONFIG += xxxx</code></td>
</tr>
<tr>
<td align="left">5</td>
<td align="left"><code>QMAKE_CXXFLAGS</code></td>
<td align="left">配置编译标志</td>
<td align="left"><code>QMAKE_CXXFLAGS = -wd499</code></td>
</tr>
</tbody></table>
<h1 id="3-使用qmake生成VS2019的工程项目管理"><a href="#3-使用qmake生成VS2019的工程项目管理" class="headerlink" title="3.使用qmake生成VS2019的工程项目管理"></a>3.使用qmake生成VS2019的工程项目管理</h1><p>使用x64 Native Tools Command，进入源码pro目录,输入如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qmake -tp vc</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>LED</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML入门笔记</title>
    <url>/posts/ea82bb07/</url>
    <content><![CDATA[<p>HTML基本语法</p>
<a id="more"></a>
<h1 id="1-HTML文件模板"><a href="#1-HTML文件模板" class="headerlink" title="1. HTML文件模板"></a>1. HTML文件模板</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">homePageUrl</span>=<span class="string">&quot;/&quot;</span> <span class="attr">homePageName</span>=<span class="string">&quot;返回&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="2-网页注册页设计与开发"><a href="#2-网页注册页设计与开发" class="headerlink" title="2. 网页注册页设计与开发"></a>2. 网页注册页设计与开发</h1><h2 id="2-1-使用的控件"><a href="#2-1-使用的控件" class="headerlink" title="2.1 使用的控件"></a>2.1 使用的控件</h2><ul>
<li><code>&lt;form/&gt;</code></li>
<li><code>&lt;input/&gt;</code></li>
<li><code>&lt;select/&gt;</code></li>
</ul>
<h2 id="2-2-控件介绍"><a href="#2-2-控件介绍" class="headerlink" title="2.2 控件介绍"></a>2.2 控件介绍</h2><blockquote>
<p><code>&lt;form/&gt;</code> 表单标签，如果数据需要提交到服务器，负责收集数据的标签必须存放到表单标签中</p>
</blockquote>
<ul>
<li><p>action: 请求路径，确定表单提交到服务器的地址</p>
</li>
<li><p>methed: 请求方式，<code>Get</code>, <code>POST</code>。</p>
<p>  <code>Get</code>: 提交数据被追加到请求路径上如<code>/register.html?username=jack&amp;password=jack</code>,追加使用<code>?</code>连接，而多组数据使用<code>&amp;</code>连接;</p>
<p>  <code>Post</code>: 提交数据不在被追加到请求路径 </p>
</li>
</ul>
<blockquote>
<p><code>&lt;input/&gt;</code> 用于获取用户输入信息</p>
</blockquote>
<ul>
<li><p>name: 元素名，如果需要将表单数据提交到服务器，必须提供name属性值</p>
</li>
<li><p>type: <code>text,password,radio,submit,checkbox,file,hidden,reset,image,button</code></p>
<p>  注: </p>
<p>  <code>submit</code>: 提交表单数据到服务器，<font color="red">一般不写name属性</font>,否则会将内容提交到服务器</p>
<p>  <code>reset</code>: 重置表单数据</p>
</li>
<li><p>value: 设置input标签默认值，<code>submit、reset和button</code>的控件名称</p>
</li>
<li><p>size: 大小</p>
</li>
<li><p>checked: 是否选中</p>
</li>
<li><p>readonly: 是否只读</p>
</li>
<li><p>disabled: 是否可用</p>
</li>
<li><p>maxlength: 允许输入最大长度</p>
</li>
</ul>
<blockquote>
<p><code>&lt;select/&gt;</code> 下拉列表标签,需要<code>&lt;option&gt;</code>子标签配合使用</p>
</blockquote>
<ul>
<li>multiple: 是否多选</li>
<li>size: 多选时，选项数目</li>
<li><code>&lt;option/&gt;</code>: 子标签,selected:是否选中,value: 发送给服务器的选项值</li>
</ul>
<blockquote>
<p><code>&lt;textarea/&gt;</code> 文本域标签</p>
</blockquote>
<ul>
<li>cols: 文本域列数</li>
<li>rows: 文本域行数</li>
</ul>
<blockquote>
<p><code>&lt;button/&gt;</code> 按钮</p>
</blockquote>
<ul>
<li>type: <code>button,reset,sumbit</code>,很少使用，不同浏览器功能不一样</li>
</ul>
<h2 id="2-3-Example"><a href="#2-3-Example" class="headerlink" title="2.3 Example"></a>2.3 Example</h2><p>设计开发注册页面</p>
<h3 id="2-3-1-设计"><a href="#2-3-1-设计" class="headerlink" title="2.3.1 设计"></a>2.3.1 设计</h3><p>注册页面简单布局如下:</p>
<p><img src="/posts/ea82bb07/RegisterDesign.PNG" alt="注册页面设计图"></p>
<p>使用<code>&lt;Table/&gt;</code>布局，创建10*3的表格</p>
<h3 id="2-3-2-开发"><a href="#2-3-2-开发" class="headerlink" title="2.3.2 开发"></a>2.3.2 开发</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#CCCCCC&quot;</span>&gt;</span>会员注册 USER REGISTER<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">         			</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         			用户名</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;loginname&quot;</span> <span class="attr">size</span>=<span class="string">&quot;60&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         			密码</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;loginpwd&quot;</span> <span class="attr">size</span>=<span class="string">&quot;60&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         			确认密码</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;reloginpwd&quot;</span> <span class="attr">size</span>=<span class="string">&quot;60&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         			E-mail</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">size</span>=<span class="string">&quot;60&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         			姓名</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">size</span>=<span class="string">&quot;60&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         			性别</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>女</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         			出生日期</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">size</span>=<span class="string">&quot;60&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;80&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">         			验证码</span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;verifyCode&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span> &gt;</span></span><br><span class="line">         			<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/yanzhengma.png&quot;</span> /&gt;</span></span><br><span class="line">         		<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         		<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         	</span><br><span class="line">         	</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-3-3-实现"><a href="#2-3-3-实现" class="headerlink" title="2.3.3 实现"></a>2.3.3 实现</h3><p><img src="/posts/ea82bb07/Register1.PNG" alt="最初注册UI开发"></p>
]]></content>
      <categories>
        <category>WEB前端开发</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript</title>
    <url>/posts/cc1b9611/</url>
    <content><![CDATA[<p>JavaScript脚本入门</p>
<a id="more"></a>

<h1 id="1-JavaScript引入"><a href="#1-JavaScript引入" class="headerlink" title="1.JavaScript引入"></a>1.JavaScript引入</h1><ol>
<li>内嵌式: 在HTML文档中,以<script>标签引入</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>外联式: 在HTML文档中,通过<script src=""/>标签引入 xxx.js文件<script src="xxx.js" type="text/javascript" charset="utf-8"></script>

</li>
</ol>
<h1 id="2-变量声明"><a href="#2-变量声明" class="headerlink" title="2.变量声明"></a>2.变量声明</h1><blockquote>
<p>命名规范:</p>
</blockquote>
<ul>
<li>必须以字母/下划线开头,中间可以是数字、字符或下划线</li>
<li>变量名不能包含空格等符号</li>
<li>不能使用JavaScript关键字作为变量名,如:function</li>
<li>JavaScript严格区分大小写</li>
</ul>
<blockquote>
<p>变量声明</p>
</blockquote>
<p><code>var 变量名</code></p>
<blockquote>
<p>变量赋值</p>
</blockquote>
<p><code>var 变量名 = 值</code></p>
<h1 id="3-数据类型"><a href="#3-数据类型" class="headerlink" title="3.数据类型"></a>3.数据类型</h1><ul>
<li>Undefined类型只有一个值，即undefined(默认值)</li>
<li>Null,只有一个专用值null,表示空</li>
<li>(undefined==null):true,但含义不同</li>
<li>Boolean:true或false</li>
<li>Number:表示数字</li>
<li>String:字符串有<code>&quot;</code>或<code>&#39;</code>声明</li>
<li>Object:变量可以是一个引用类型或null</li>
</ul>
<h1 id="4-案例"><a href="#4-案例" class="headerlink" title="4.案例"></a>4.案例</h1><h2 id="4-1-注册表单验证"><a href="#4-1-注册表单验证" class="headerlink" title="4.1 注册表单验证"></a>4.1 注册表单验证</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">checkForm</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">//alert(&quot;aa&quot;);</span></span><br><span class="line">		<span class="comment">/**校验用户名*/</span></span><br><span class="line">		<span class="comment">//1.获取用户输入的数据</span></span><br><span class="line">		<span class="keyword">var</span> uValue = <span class="built_in">document</span>.getElementById(<span class="string">&quot;user&quot;</span>).value;</span><br><span class="line">		<span class="comment">//alert(uValue);</span></span><br><span class="line">		<span class="keyword">if</span>(uValue==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">			<span class="comment">//2.给出错误提示信息</span></span><br><span class="line">			alert(<span class="string">&quot;用户名不能为空!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/*校验密码*/</span></span><br><span class="line">		<span class="keyword">var</span> pValue = <span class="built_in">document</span>.getElementById(<span class="string">&quot;password&quot;</span>).value;</span><br><span class="line">		<span class="keyword">if</span>(pValue==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">			alert(<span class="string">&quot;密码不能为空!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**校验确认密码*/</span></span><br><span class="line">		<span class="keyword">var</span> rpValue = <span class="built_in">document</span>.getElementById(<span class="string">&quot;repassword&quot;</span>).value;</span><br><span class="line">		<span class="keyword">if</span>(rpValue!=pValue)&#123;</span><br><span class="line">			alert(<span class="string">&quot;两次密码输入不一致!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/*校验邮箱*/</span></span><br><span class="line">		<span class="keyword">var</span> eValue = <span class="built_in">document</span>.getElementById(<span class="string">&quot;eamil&quot;</span>).value;</span><br><span class="line">		<span class="keyword">if</span>(!^<span class="regexp">/([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/</span>.test(eValue))&#123;</span><br><span class="line">			alert(<span class="string">&quot;邮箱格式不正确!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;form action=<span class="string">&quot;#&quot;</span> method=<span class="string">&quot;get&quot;</span> name=<span class="string">&quot;regForm&quot;</span> onsubmit=<span class="string">&quot;return checkForm()&quot;</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">  &lt;/form&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>WEB前端开发</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>1.RobotArm坐标变换</title>
    <url>/posts/3be36776/</url>
    <content><![CDATA[<p>机械臂关节坐标变换介绍</p>
<a id="more"></a>
<h1 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h1><p>如果把机械臂每个关节看作一个空间坐标系，每个相邻坐标系之间以连杆相连，则必须建立两个连杆之间的描述，如下图所示。</p>
<p><img src="/posts/3be36776/%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2.PNG" alt="关节坐标变换"></p>
<ul>
<li>假设机械臂有N个关节，则机械臂拥有N+1个连杆(基座为连杆0);</li>
<li>关节J+1的坐标系{j}的确立:<ul>
<li>以上一关节J和关节J+1的旋转轴($z_{j-1}$和$z_j$)的法线作为{j}的x轴$x_j$</li>
<li>z轴、x轴确立，用右手定则确定y轴</li>
</ul>
</li>
<li>DH模型参数确定<ul>
<li>$x_{j-1}$与$x_j$的夹角为$\theta_{j}$</li>
<li>坐标系{j-1}原点与坐标系{j}原点投影到$z_{j-1}$轴上点的距离$d_j$</li>
<li></li>
</ul>
</li>
</ul>
<blockquote>
<p>DH模型</p>
</blockquote>
<p>机械臂建立数学模型（DH模型），需要对各个关节建立空间坐标系，并建立DH参数表</p>
<table>
<thead>
<tr>
<th align="center">连杆号</th>
<th align="center">$\theta_j$</th>
<th align="center">$d_j$</th>
<th align="center">$a_j$</th>
<th align="center">$\alpha_j$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">连杆1</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
</tr>
<tr>
<td align="center">连杆2</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
</tr>
<tr>
<td align="center">连杆3</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
</tr>
<tr>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
</tr>
</tbody></table>
<blockquote>
<p>空间坐标-旋转平移公式</p>
</blockquote>

\[^{j - 1}{A_j}({\theta _j},{d_j},{\alpha _j},{a_j}) = \left[ {\begin{array}{*{20}{c}}{\cos {\theta _j}}&{ - \sin {\theta _j}\cos {\alpha _j}}&{\sin {\theta _j}\sin {\alpha _j}}&{{a_j}\cos {\theta _j}}\\{\sin {\theta _j}}&{\cos {\theta _j}\sin {\alpha _j}}&{ - \cos {\theta _j}\sin {\alpha _j}}&{{a_j}\sin {\theta _j}}\\0&{\sin {\alpha _j}}&{\cos {\alpha _j}}&{{d_j}}\\0&0&0&1\end{array}} \right]\]
]]></content>
      <categories>
        <category>机器人学</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>坐标变换</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS入门</title>
    <url>/posts/cd86acaf/</url>
    <content><![CDATA[<p>在WEB前端开发中，采用<code>&lt;Talbe/&gt;</code>布局并不是太灵活，一般采用DIV+CSS方式进行布局。</p>
<a id="more"></a>

<h1 id="1-lt-div-gt-标签简介"><a href="#1-lt-div-gt-标签简介" class="headerlink" title="1. &lt;div/&gt;标签简介"></a>1. <code>&lt;div/&gt;</code>标签简介</h1><ul>
<li>独占一行，块级模块元素，需要使用CSS进行渲染</li>
<li>可以定义文档中的分区或小节</li>
<li>在CSS定义时，采用id或class进行标记</li>
</ul>
<h1 id="2-CSS简介"><a href="#2-CSS简介" class="headerlink" title="2. CSS简介"></a>2. CSS简介</h1><ul>
<li>设置HTML文本内容的字体、大小、对其方式；图片外形、大小、边框、边距等</li>
<li>是一种层叠样式表，可以给一个标签添加多个样式进行叠加</li>
</ul>
<h2 id="2-1-语法规则"><a href="#2-1-语法规则" class="headerlink" title="2.1 语法规则"></a>2.1 语法规则</h2><blockquote>
<p>语法: <code>选择器&#123;属性1:属性值;属性2:属性值;...&#125;</code></p>
</blockquote>
<ul>
<li>选择器: HTML中作用的标签对象</li>
<li>选择器语法严格区分大小写，而属性名和值不区分</li>
<li>代码注释采用<code>/* comment */</code></li>
</ul>
<h2 id="2-2-CSS样式引入"><a href="#2-2-CSS样式引入" class="headerlink" title="2.2 CSS样式引入"></a>2.2 CSS样式引入</h2><p>  CSS可以嵌入HTML文档中，也可以引用以.css为扩展名的文件</p>
<blockquote>
<p>1.行内样式</p>
</blockquote>
<p>通过标签<code>&lt;style&gt;&lt;style/&gt;</code>设置元素样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;color:#00ff00;font-size:30px&quot;</span> <span class="attr">href</span>=<span class="string">&quot;www.baidu.com&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>2.内部样式</p>
</blockquote>
<p>将CSS代码集成到HTML文档的<code>&lt;head/&gt;</code>标签中</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        	<span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">        		<span class="attribute">background-color</span>: <span class="number">#ddd</span>;</span></span><br><span class="line">        	&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>3.外部样式</p>
</blockquote>
<ul>
<li>外部样式(链入式)，将所有样式放在一个或多个以.css为扩展名的外部样式表文件中，通过<code>&lt;link/&gt;</code>标签将样式链接到HTML文档</li>
<li>一个HTML文档，可以通过<code>&lt;link/&gt;</code>标签，链接多个css样式表</li>
</ul>
<p> 1.新建css/styles.css文件</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-tag">body</span>&#123;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#ddd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> 2.HTML引入styles.css文件</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/styles.css&quot;</span> /&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="2-3-CSS选择器"><a href="#2-3-CSS选择器" class="headerlink" title="2.3 CSS选择器"></a>2.3 CSS选择器</h2><p>指定特定HTML元素的语法，有5种: 元素选择器、ID选择器、类选择器、属性选择器、包含选择器。</p>
<blockquote>
<p>1.元素选择器</p>
</blockquote>
<p><code>标签名&#123;属性1:属性值1;属性2:属性值;属性3:属性值&#125;</code></p>
<p>标签名: HTML的标签，如<code>h1,h2,h3,body,p,stong ...</code><br>优点: 对页面的同一类型标签进行统一标记</p>
<blockquote>
<p>2.ID选择器</p>
</blockquote>
<p>使用<code>#IdName</code>进行标识</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#demo1 &#123;color:#0f0;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span>ID选择器<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>3.类选择器</p>
</blockquote>
<p>使用<code>.类名</code>进行标识,可为指定标签定义相同的样式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.ucclass &#123;font-size: 25px&#125;</span><br><span class="line"></span><br><span class="line">&lt;h1 class&#x3D;&quot;ucclass&quot;&gt;类选择器&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>4.属性选择器</p>
</blockquote>
<p>语法格式: 标签名[标签属性=’属性值’]{属性1:属性值;属性2:属性值;},</p>
<p>组要是对元素(如input)选择器的扩展,进行进一步过滤</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  input[type&#x3D;&quot;text&quot;]&#123;background-color:yellow;&#125;</span><br><span class="line">  input[type&#x3D;&quot;password&quot;]&#123;background-color:green;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>5.包含选择器</p>
</blockquote>
<p>给指定父标签中子标签设置样式</p>
<p><code>父标签 子标签&#123;属性1:属性值;属性2:属性值;&#125;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-id">#d1</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: red;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="2-4-CSS样式"><a href="#2-4-CSS样式" class="headerlink" title="2.4 CSS样式"></a>2.4 CSS样式</h2><blockquote>
<p>border: 设置边框样式</p>
</blockquote>
<p><code>style=&quot;border:1px solid #f00&quot;</code>: 线宽1 实线 红色</p>
<blockquote>
<p>width,height: 设置标签的宽度、高度</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>布局: float clear</p>
</blockquote>
<p>div是单独一行排列，而在实际开发中，需要左右方式进行排版，这就需要使用浮动(float),属性值:</p>
<ul>
<li>left: 元素向左浮动</li>
<li>right: 元素向右浮动</li>
<li>none: 元素不浮动(默认值)</li>
</ul>
<p>浮动元素不占用原文档流的位置，所以会对页面中其他元素产生影响，需要使用clear属性禁用该行的浮动,属性值:</p>
<ul>
<li>left:不允许左侧有浮动</li>
<li>right:不允许右侧有浮动</li>
<li>both:不允许两侧有浮动</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>默认上下布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span>&gt;</span>默认上下布局: 区域1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span>&gt;</span>默认上下布局: 区域2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>浮动布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: left;color: green;&quot;</span>&gt;</span>浮动布局: 该区域1左对齐 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: left;color: green;&quot;</span>&gt;</span>浮动布局: 该区域2左对齐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: right;color: green;&quot;</span>&gt;</span>浮动布局: 该区域3右对齐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: right;color: green;&quot;</span>&gt;</span>浮动布局: 该区域3右对齐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>默认布局: 该区域独站一行，浮动div并不属于该行，只属于浮于该控件上方<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> &gt;</span>默认布局: 该区域独站一行<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>取消浮动布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: left;color: green;&quot;</span>&gt;</span>浮动布局: 该区域1左对齐 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: left;color: green;&quot;</span>&gt;</span>浮动布局: 该区域2左对齐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red;clear: both;&quot;</span>&gt;</span>默认布局: 该区域独站一行，左右禁止浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: right;color: green;&quot;</span>&gt;</span>浮动布局: 该区域3右对齐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;float: right;color: green;&quot;</span>&gt;</span>浮动布局: 该区域3右对齐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> &gt;</span>默认布局: 该区域独站一行，但右对齐浮于该行右方<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note success">
            <p>浮动布局效果</p>
          </div>

<p><img src="/posts/cd86acaf/FloatClear%E5%B8%83%E5%B1%801.PNG" alt="浮动布局效果"></p>
<blockquote>
<p>转化: display</p>
</blockquote>
<p>HTML标签元素一般分为: 块标签元素和行内标签元素，使用display,可是行内标签元素与块标签元素相互转化</p>
<ul>
<li>块标签元素: <code>&lt;h1/&gt;、&lt;div/&gt;、&lt;ul/&gt;</code>等</li>
<li>行内标签元素: 不必另起一行开始，也不强迫后续元素在新一行显示，如<code>&lt;span/&gt;、&lt;a/&gt;</code>等</li>
</ul>
<p>格式:</p>
<p>选择器{display:属性值}，其属性值:</p>
<ul>
<li>inline:此标签元素将为行内标签元素</li>
<li>block: 此标签元素为块标签元素</li>
<li>inline-block: 将对象呈递为内联对象，但对象内容作为块对象呈递(即几个块为一个整体，形成一个块元素)</li>
<li>none: 该对象将被隐藏，不显示、不占页面空间</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>行内元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>块元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span>&gt;</span>块元素1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span>&gt;</span>块元素2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>行内元素-&gt;块元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display: block;&quot;</span>&gt;</span>span块元素1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display: block;&quot;</span>&gt;</span>span块元素2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>块元素-&gt;行内元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: inline;&quot;</span>&gt;</span>div行内元素1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: inline;&quot;</span>&gt;</span>div行内元素2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>块元素-&gt;内联-块元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block;&quot;</span>&gt;</span>内联-块元素1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block;&quot;</span>&gt;</span>内联-块元素2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note success">
            <p>Dispaly:行内元素与块元素转换效果</p>
          </div>

<p><img src="/posts/cd86acaf/Display%E5%B1%9E%E6%80%A71.PNG" alt="行内元素与块元素转换效果"></p>
<blockquote>
<p>字体:color,font-size</p>
</blockquote>
<ul>
<li>color: 字体颜色，#000000(RGB 255 255 255)</li>
<li>font-size: 字体大小</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height: 50px;width:200px;border: 1px solid #000;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> &gt;</span>超链接默认格式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration: none;&quot;</span>&gt;</span>取消超链接下划线<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height: 50px;width:200px;border: 1px solid #000;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;line-height: 50px;background-color: red;&quot;</span>&gt;</span>设置超链接下划线行高<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>超链接字体红色<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note success">
            <p>字体大小颜色效果</p>
          </div>

<p><img src="/posts/cd86acaf/FontColorSize%E5%B1%9E%E6%80%A71.PNG" alt="字体大小颜色设置"></p>
<blockquote>
<p>背景颜色: background-color</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkgray;color: white;font-size: 30px;&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>列表1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;background-color: black;&quot;</span>&gt;</span>列表2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>列表3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>列表4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note success">
            <p>背景颜色设置效果</p>
          </div>

<p><img src="/posts/cd86acaf/BackgroundColor%E5%B1%9E%E6%80%A7.PNG" alt="背景颜色设置"></p>
<h2 id="2-4-CSS盒子模型"><a href="#2-4-CSS盒子模型" class="headerlink" title="2.4 CSS盒子模型"></a>2.4 CSS盒子模型</h2><p>CSS盒子模型规定了元素框处理元素的内容、内边距、边框和外边距。物理结构如下:</p>
<p><img src="/posts/cd86acaf/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B.png" alt="CSS盒子模型">;</p>
<blockquote>
<p>内边距 padding</p>
</blockquote>
<ul>
<li>可以按照上、右、下、左的顺序设置内边距,各边可以使用不同单位或百分比设置</li>
<li>或者设置属性<code>padding-top、padding-right、padding-bottom和padding-left</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			.padding1 &#123;</span><br><span class="line"><span class="css">				<span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0.25em</span> <span class="number">2ex</span> <span class="number">20%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: red;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;background-color: red;&quot;</span>&gt;</span>默认padding<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;padding1&quot;</span>&gt;</span> padding<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<div class="note success">
            <p>内边距设置效果</p>
          </div>

<p><img src="/posts/cd86acaf/%E5%86%85%E8%BE%B9%E8%B7%9D%E8%AE%BE%E7%BD%AE.png" alt="CSS盒子模型"></p>
<blockquote>
<p>边框 border</p>
</blockquote>
<ul>
<li>属性有: <code>border-top-style、border-right-style、border-bottom-style、border-left-style</code></li>
</ul>
<blockquote>
<p>外边距 margin</p>
</blockquote>
<ul>
<li>属性有: <code>margin-top、margin-right、margin-bottom、margin-left</code></li>
</ul>
<h1 id="3-案例"><a href="#3-案例" class="headerlink" title="3. 案例"></a>3. 案例</h1><blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/cd86acaf/DIVCSSPart1.PNG" alt="DIVCSSPart1"><br><img src="/posts/cd86acaf/DIVCSSPart2.PNG" alt="DIVCSSPart2"><br><img src="/posts/cd86acaf/DIVCSSPart3.PNG" alt="DIVCSSPart3"></p>
<blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>网络商城<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			.header &#123;</span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="comment">/*顶层元素向左浮动*/</span></span></span><br><span class="line">			.header .top&#123;</span><br><span class="line"><span class="css">				<span class="attribute">float</span> <span class="selector-pseudo">:left</span>; </span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">33.2%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">align-content</span>: center;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.top</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="css">				<span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.top</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">display</span>: inline-block;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="comment">/* 内容中间对齐 */</span></span></span><br><span class="line"><span class="css">			<span class="selector-class">.top</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">				<span class="attribute">line-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">align-content</span>: center;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			.menu &#123;</span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: <span class="number">#333</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.menu</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="css">				<span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.menu</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="css">				<span class="attribute">padding</span>: <span class="number">0px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.menu</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">				<span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">				<span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.menu</span> <span class="selector-tag">a</span> <span class="selector-class">.show</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			.newProducts &#123;</span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			.newProducts .left &#123;</span><br><span class="line"><span class="css">				<span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">15%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			.newProducts .right &#123;</span><br><span class="line"><span class="css">				<span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">83%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			.newProducts .right .first &#123;</span><br><span class="line"><span class="css">				<span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">250px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">			.newProducts .right .item &#123;</span><br><span class="line"><span class="css">				<span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">16.4%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">250px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">				<span class="attribute">display</span>: block;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.newProducts</span> <span class="selector-class">.left</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.newProducts</span> <span class="selector-class">.right</span> <span class="selector-class">.first</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.newProducts</span> <span class="selector-class">.right</span> <span class="selector-class">.item</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">75%</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="css">			 	<span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.newProducts</span> <span class="selector-class">.right</span> <span class="selector-class">.item</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">			 	<span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="css">			 	<span class="attribute">color</span>: red;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-class">.newProducts</span> <span class="selector-class">.right</span> <span class="selector-class">.item</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">			 	<span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="css">			 	<span class="attribute">color</span>: black;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-tag">div</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">list-style</span>: none;</span></span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-tag">div</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="css">				<span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">10px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			#footer &#123;</span><br><span class="line"><span class="css">				<span class="attribute">text-align</span>: center;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"><span class="css">			<span class="selector-id">#footer</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">text-decoration</span>: none;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 父容器 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 1.第一行Header --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/logo2.png&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/header.png&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>购物<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span>			</span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">&lt;!-- 2.Menu --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;show&quot;</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">				<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">&lt;!-- 3.轮播图 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/1.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>  /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">&lt;!-- 4.最新商品信息 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;newProducts&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新商品<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/title2.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!--&lt;div style=&quot;float:left;font-size: 25px;&quot;&gt;最新商品信息&lt;/div&gt;</span></span><br><span class="line"><span class="comment">					&lt;div style=&quot;float:left;height: 100%;&quot; &gt;</span></span><br><span class="line"><span class="comment">					&lt;img style=&quot;vertical-align: bottom;&quot;  src=&quot;img/title2.jpg&quot;/&gt;</span></span><br><span class="line"><span class="comment">					&lt;/div&gt;--&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/big01.jpg&quot;</span> /&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/middle01.jpg&quot;</span> /&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small01.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> &gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>破碎机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> &gt;</span>￥699<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small02.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>显示屏<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥699<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small03.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>电饭锅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥299<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small04.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>电炖锅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥199<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small05.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>饮水机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥399<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small06.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>洗衣机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥999<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small07.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>扫地机器人<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥1999<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small08.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥1299<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small09.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>烤箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥2199<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/ad.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>  /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;newProducts&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h2</span>&gt;</span>热门商品<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/title2.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">					<span class="comment">&lt;!--&lt;div style=&quot;float:left;font-size: 25px;&quot;&gt;最新商品信息&lt;/div&gt;</span></span><br><span class="line"><span class="comment">					&lt;div style=&quot;float:left;height: 100%;&quot; &gt;</span></span><br><span class="line"><span class="comment">					&lt;img style=&quot;vertical-align: bottom;&quot;  src=&quot;img/title2.jpg&quot;/&gt;</span></span><br><span class="line"><span class="comment">					&lt;/div&gt;--&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/big01.jpg&quot;</span> /&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/middle01.jpg&quot;</span> /&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small01.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> &gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>破碎机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> &gt;</span>￥699<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small02.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>显示屏<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥699<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small03.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>电饭锅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥299<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small04.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>电炖锅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥199<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small05.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>饮水机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥399<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small06.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>洗衣机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥999<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small07.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>扫地机器人<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥1999<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small08.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥1299<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/small09.jpg&quot;</span> /&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>烤箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>￥2199<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- footer --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/footer.jpg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>招贤纳士<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>法律声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>配送方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>服务声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>广告声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">				Copyright © 2005-2016 ZhenXing 版权所有(学习)</span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>WEB前端开发</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>FM4时钟单元</title>
    <url>/posts/undefined/</url>
    <content><![CDATA[<p>FM4单片机时钟介绍</p>
<a id="more"></a>
<h1 id="1-时钟产生单元"><a href="#1-时钟产生单元" class="headerlink" title="1.时钟产生单元"></a>1.时钟产生单元</h1><blockquote>
<p>5种时钟源</p>
</blockquote>
<ul>
<li>Main Clock (CLKMO)</li>
<li>Sub Clock (CLKSO)</li>
<li>High-speed CR Clock (CLKHC)</li>
<li>Low-speed CR Clock (CLKLC)</li>
<li>Main PLL Clock (CLKPLL)</li>
</ul>
<p>可从上述时钟源种选择一种作为master clock,作为内部总线时钟用于MCU<br>通过对master clock分频,产生一个base clock,对base clock分频产生内部总线时钟。</p>
<blockquote>
<p>Master Clock  - Interal Bus Clock</p>
<blockquote>
<p>Div=&gt; Base Clock - Interal Bus Clock</p>
<blockquote>
<p>Div=&gt; Clocks - Interal Bus Clock </p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>5种内部总线时钟</p>
</blockquote>
<ul>
<li>Base Clock (FCLK/HCLK)</li>
<li>APB0 Clock (PCLK0)</li>
<li>APB1 Clock (PCLK1)</li>
<li>APB2 Clock (PCLK2)</li>
<li>TRACE Clock (TPIUCLK)</li>
</ul>
<p>除此之外，以下外设在使用时，也要提供时钟</p>
<ul>
<li>USB Clock</li>
<li>USB/Ethernet Clock</li>
<li>CAN prescaler Clock</li>
<li>I2S Clock</li>
<li>GDC Clock</li>
<li>Software watchdog timer count clock</li>
</ul>
<blockquote>
<p>时钟产生单元特性</p>
</blockquote>
<ul>
<li><p>可以设置Main Clock稳定周期</p>
</li>
<li><p>可以设置Main Clock稳定中断事件</p>
</li>
<li><p>可以设置Sub Clock稳定周期</p>
</li>
<li><p>可以设置Sub Clock稳定中断事件</p>
</li>
<li><p>可以设置PLL Clock稳定周期</p>
</li>
<li><p>可以设置PLL Clock稳定中断事件</p>
</li>
<li><p>可以设置PLL倍频</p>
</li>
<li><p>可以选择master clock</p>
</li>
<li><p>可以设置内部时钟总线的内部分频</p>
</li>
<li><p>可以运行/停止APB1 和 APB2总线时钟</p>
</li>
<li><p>看门狗定时器时钟(WDT)可以分频</p>
</li>
<li><p>可以停止/运行WDT</p>
</li>
<li><p>在debug模式下,可以设置WDT计数操作</p>
</li>
</ul>
<h2 id="1-1-时钟源-Master-Clock-可以选择其中一个作为时钟源"><a href="#1-1-时钟源-Master-Clock-可以选择其中一个作为时钟源" class="headerlink" title="1.1 时钟源 - Master Clock 可以选择其中一个作为时钟源"></a>1.1 时钟源 - Master Clock 可以选择其中一个作为时钟源</h2><blockquote>
<p>1.Main Clock</p>
</blockquote>
<p>由外部引脚X0,X1提供时钟</p>
<blockquote>
<p>2.Sub Clock</p>
</blockquote>
<p>由外部引脚X0A,X1A提供</p>
<blockquote>
<p>3.High-speed CR Clock</p>
</blockquote>
<p>高速CR振荡时钟</p>
<blockquote>
<p>4.Low-speed CR Clock</p>
</blockquote>
<p>低速CR振荡时钟</p>
<blockquote>
<p>5.PLL Clock</p>
</blockquote>
<p>由Main Clock/High-speed CR Clock倍频获得</p>
<h2 id="1-2-内部总线时钟"><a href="#1-2-内部总线时钟" class="headerlink" title="1.2 内部总线时钟"></a>1.2 内部总线时钟</h2><blockquote>
<p>1.Base Clock (FCLK/HCLK 直接作用于CPU)  </p>
</blockquote>
<p>HCLK直接作用于AHB总线时钟</p>
<p>Base Clock = MasterClock/1 or MasterClock/16</p>
<p>在定时器模式，RTC模式，停机模式，深度待机RTC模式以及深度待机停止模式,Base Clock停止</p>
<p><font color="red">在睡眠模式下，CPU停止HCLK，但FCLK继续使用</font></p>
<blockquote>
<p>2.APB0总线时钟(PCLK0)</p>
</blockquote>
<p>PCLK0 = Base Clock/1 or Base Clock/8</p>
<p>在定时器模式，RTC模式，停机模式，深度待机RTC模式以及深度待机停止模式,PCLK0停止</p>
<blockquote>
<p>2.APB1总线时钟(PCLK1)</p>
</blockquote>
<p>PCLK1 = Base Clock/1 or Base Clock/8</p>
<p>在定时器模式，RTC模式，停机模式，深度待机RTC模式以及深度待机停止模式,PCLK1停止</p>
<p><font color="red">该总线时钟可以使用寄存器停止运行</font></p>
<blockquote>
<p>3.APB2总线时钟</p>
</blockquote>
<p>同 APB1 </p>
<blockquote>
<p>4.TPIU Clock</p>
</blockquote>
<p>同APB0(<font color="red">只有代ETM的产品才能使能该时钟</font>)</p>
<h2 id="1-3其他时钟源"><a href="#1-3其他时钟源" class="headerlink" title="1.3其他时钟源"></a>1.3其他时钟源</h2><blockquote>
<p>1.USB时钟</p>
</blockquote>
<p>产生48MHz时钟，通过PLL-&gt;USBCLK</p>
<p>在定时器模式，RTC模式，停机模式，深度待机RTC模式以及深度待机停止模式,USB时钟停止</p>
<p>该时钟独立于Master Clock</p>
<blockquote>
<p>2.USB/Ethernet Clock</p>
</blockquote>
<p>同上</p>
<blockquote>
<p>3.CAN prescaler Clock</p>
</blockquote>
<p>该时钟与PLL一致</p>
<p>通过配置presaler一侧，实现分频</p>
<p>在RTC模式、停机模式、深度待机RTC模式、深度待机停机模式下停止使用</p>
<p>通过寄存器可以停止该时钟</p>
<blockquote>
<p>4.I2S prescaler Clock</p>
</blockquote>
<p>由PLL提供</p>
<p>在定时器模式、RTC模式、停机模式、深度待机RTC模式、深度待机停机模式下停止使用</p>
<p>可以独立设置时钟</p>
<blockquote>
<p>5.GDC prescler Clock</p>
</blockquote>
<p>由PLL提供</p>
<p>在定时器模式、RTC模式、停机模式、深度待机RTC模式、深度待机停机模式下停止使用</p>
<p>可以独立设置时钟</p>
<blockquote>
<p>6.WDT Clock</p>
</blockquote>
<p>该时钟与APB0相连</p>
<p>WDTClk = APB0/1 or APB0/8</p>
<p>在定时器模式、RTC模式、停机模式、深度待机RTC模式、深度待机停机模式下停止使用 </p>
<h2 id="1-3时钟树"><a href="#1-3时钟树" class="headerlink" title="1.3时钟树"></a>1.3时钟树</h2><p><img src="/posts/undefined/ClockTree.PNG" alt="FM4时钟树"></p>
<blockquote>
<p><font color="red">[注]</font> <br><br>*2. PSW_TMR:PINC 为PLL输入时钟选择位 <br><br>*3. SCM_CTL:RCS[2:0] Master Clock选择位 <br></p>
</blockquote>
<h1 id="2-PLL作为主时钟设置"><a href="#2-PLL作为主时钟设置" class="headerlink" title="2.PLL作为主时钟设置"></a>2.PLL作为主时钟设置</h1><h1 id="2-1时钟选择"><a href="#2-1时钟选择" class="headerlink" title="2.1时钟选择"></a>2.1时钟选择</h1><p>1.设置 System Clock Mode Control Register (SCM_CTL)中SOSCE位，旁路CLKSO</p>
<h2 id="2-2-PLL设置"><a href="#2-2-PLL设置" class="headerlink" title="2.2 PLL设置"></a>2.2 PLL设置</h2><p>1.设置PLL时钟振荡启动稳定时间寄存器(PLL Clock Oscillation Stabilization Wait Time Setup Register)PSW_TMR</p>
<ul>
<li><p>选择PLL输入时钟</p>
</li>
<li><p>设置PLL稳定时长</p>
</li>
<li><p>通过设置PLL Control Register 1(PLL_CTL1) 和 PLL Control Register 2 (PLL_CTL2)，配置PLLCLK</p>
<table>
<thead>
<tr>
<th align="center">InputClk</th>
<th align="center">K</th>
<th align="center">PLLIn</th>
<th align="center">N</th>
<th align="center">PLLout</th>
<th align="center">M</th>
<th align="center">CLKPLL</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>4MHz</strong></td>
<td align="center"><strong>1</strong></td>
<td align="center"><strong>4MHz</strong></td>
<td align="center"><strong>40</strong></td>
<td align="center"><strong>320MHz</strong></td>
<td align="center"><strong>2</strong></td>
<td align="center"><strong>160MHz</strong></td>
</tr>
<tr>
<td align="center"><strong>8MHz</strong></td>
<td align="center"><strong>1</strong></td>
<td align="center"><strong>8MHz</strong></td>
<td align="center"><strong>20</strong></td>
<td align="center"><strong>320MHz</strong></td>
<td align="center"><strong>2</strong></td>
<td align="center"><strong>160MHz</strong></td>
</tr>
</tbody></table>
</li>
</ul>
<p>2.设置System Clock Mode Control Register (SCM_CTL) 的PLLE位,使能PLL振荡</p>
<p>3.通过System Clock Mode Status Register (SCM_STR) 的PLL oscillation stable状态位，判断PLL是否完成</p>
<p>4.设置System Clock Mode Control Register(SCM_CTL)的RCS[2:0]=010,将其作为Master Clock的输入                             </p>
<h2 id="2-4-分频设置"><a href="#2-4-分频设置" class="headerlink" title="2.4 分频设置"></a>2.4 分频设置</h2><p>主要设置 Base Clock Prescaler Register (BSC_PSR), APB0 Prescaler Register (APBC0_PSR), APB1 Prescaler Register (APBC1_PSR), APB2<br>Prescaler Register (APBC2_PSR), and Trace Clock Prescaler Register (TTC_PSR).</p>
<h1 id="2-5与时钟相关的中断"><a href="#2-5与时钟相关的中断" class="headerlink" title="2.5与时钟相关的中断"></a>2.5与时钟相关的中断</h1><blockquote>
<p>4种中断类型</p>
</blockquote>
<ul>
<li>FCS (anomalous frequency detection) interrupt </li>
<li>Main PLL clock oscillation stabilization wait completion interrupt </li>
<li>Sub clock oscillation stabilization wait completion interrupt </li>
<li>Main clock oscillation stabilization wait completion interrupt </li>
</ul>
<blockquote>
<p>中断相关寄存器</p>
</blockquote>
<ul>
<li>Interrupt Enable Register (INT_ENR) </li>
<li>Interrupt Status Register (INT_STR) read-only </li>
<li>Interrupt Clear Register (INT_CLR) write-only</li>
</ul>
<h1 id="3-配置流程"><a href="#3-配置流程" class="headerlink" title="3.配置流程"></a>3.配置流程</h1><h1 id="High-speed-CR-Run-Mode-gt-Desired-Clock-Mode"><a href="#High-speed-CR-Run-Mode-gt-Desired-Clock-Mode" class="headerlink" title="High-speed CR Run Mode -&gt; Desired Clock Mode"></a>High-speed CR Run Mode -&gt; Desired Clock Mode</h1><p><img src="/posts/undefined/High-SpeedCR2DesiredClock.PNG" alt="FM4时钟树"></p>
<blockquote>
<p>配置步骤</p>
<blockquote>
<p><strong><font color="yellowgreen">Step1.使用High-Speed CR 时钟</font></strong> <br><br>1.1 等待内部High-Speed CR 振荡稳定:系统上电后默认时钟 <br><br>1.2 进行BusClock分频 <br><br>1.3 使用INT_CLR清除所有中断标志位<br><br><strong><font color="yellowgreen">Step2.由High-Speed CR 时钟切换至MainCLK</font></strong> <br><br>2.1 设置CSW_TMR寄存器中的振荡延时 <br><br>2.2 使能振荡稳定中断INT_ENT ??? 这应该不需要 <br><br>2.3 使能MainCLK SCM_CTL:MOSCE=1 作为Master CLK <br><br>2.4 等待MainCLK振荡稳定标志位SCM_STR:MORDY=1 <br><br><strong><font color="yellowgreen">Step3.由MainCLK切换至PLLCLK</font></strong> <br><br>3.1 设置内部PLL振荡稳定时间 <br><br>3.2 设置PLL输入时钟 <br><br>3.3 设置PLL振荡稳定中断 ??? 这应该不需要 <br><br>3.4 通过设置PLL_CTL1,PLL_CTL2设置倍频系数 <br><br>3.5 使能PLL（SCM_CTL:PLLE=1）<br><br>3.6 确认PLL振荡状态标志位:SCM_STR:PLRDY <br><br><strong><font color="yellowgreen">Step4.设置Master Clock输入</font></strong> <br><br>4.1 设置SCM_CTL:RCS设置相应的时钟模式 <br><br>4.2 SCM:STR:RCM == SCM_CTL:RCS 正在切换 <br> </p>
</blockquote>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bsp_PLLInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">uint32_t</span> tmp;</span><br><span class="line">	</span><br><span class="line"><span class="comment">// Step1.使用High-Speed CR 时钟	</span></span><br><span class="line"><span class="comment">// 1.1 等待内部High-Speed CR 振荡稳定:系统上电后默认时钟</span></span><br><span class="line"><span class="comment">// 1.2 进行BusClock分频 &lt;br/&gt;</span></span><br><span class="line"><span class="comment">// 1.3 使使用INT_CLR清除所有中断标志位&lt;br/&gt;</span></span><br><span class="line">	FM4_CRG-&gt;INT_CLR |=<span class="number">0x07</span>;</span><br><span class="line">	</span><br><span class="line"><span class="comment">// Step2.由High-Speed CR 时钟切换至MainCLK</span></span><br><span class="line">	tmp = FM4_CRG-&gt;CSW_TMR &amp; ~<span class="number">0x0f</span>;</span><br><span class="line">	FM4_CRG-&gt;CSW_TMR = tmp|<span class="number">0x0b</span>; <span class="comment">// 20.96s</span></span><br><span class="line">	<span class="comment">//FM4_CRG-&gt;INT_ENR |= 0x01;	// 使能MainCLK中断</span></span><br><span class="line">	FM4_CRG-&gt;SCM_CTL |= <span class="number">0x01</span>&lt;&lt;<span class="number">1</span>; <span class="comment">// Enable Main CLK</span></span><br><span class="line">	<span class="keyword">while</span>(~FM4_CRG-&gt;SCM_STR&amp;(<span class="number">0x01</span>&lt;&lt;<span class="number">1</span>));<span class="comment">//SCM_STR:MORDY</span></span><br><span class="line">	</span><br><span class="line"><span class="comment">// Step3.由MainCLK切换至PLLCLK</span></span><br><span class="line">	tmp = FM4_CRG-&gt;PSW_TMR &amp; ~(<span class="number">0x01</span>&lt;&lt;<span class="number">4</span>|<span class="number">0x07</span>);</span><br><span class="line">	FM4_CRG-&gt;PSW_TMR = tmp|<span class="number">0x07</span>; <span class="comment">// 16.40 PLLin = MainClk</span></span><br><span class="line">	</span><br><span class="line">	tmp = FM4_CRG-&gt;PLL_CTL1 &amp; ~<span class="number">0xff</span>;	</span><br><span class="line">	FM4_CRG-&gt;PLL_CTL1 = tmp|<span class="number">0x01</span>;	<span class="comment">// K=1 M=2</span></span><br><span class="line">	tmp = FM4_CRG-&gt;PLL_CTL2 &amp; ~<span class="number">0xff</span>;</span><br><span class="line">	FM4_CRG-&gt;PLL_CTL2 = tmp|<span class="number">39</span>;	<span class="comment">// N=39</span></span><br><span class="line">	FM4_CRG-&gt;SCM_CTL |= <span class="number">0x01</span>&lt;&lt;<span class="number">4</span>; <span class="comment">// Enable PLL CLK</span></span><br><span class="line">	<span class="keyword">while</span>(~FM4_CRG-&gt;SCM_STR&amp;(<span class="number">0x01</span>&lt;&lt;<span class="number">4</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// Step4.设置PLL为Master Clock输入</span></span><br><span class="line">	tmp = FM4_CRG-&gt;SCM_CTL &amp; ~(<span class="number">0x07</span>&lt;&lt;<span class="number">5</span>);</span><br><span class="line">	FM4_CRG-&gt;SCM_CTL = tmp|(<span class="number">0x02</span>&lt;&lt;<span class="number">5</span>);</span><br><span class="line">	</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Workaround for preventing MISRA C:1998 Rule 46 (MISRA C:2004 Rule 12.2)</span></span><br><span class="line">  <span class="comment">// violations:</span></span><br><span class="line">  <span class="comment">//   &quot;Unordered reads and writes to or from same location&quot; and</span></span><br><span class="line">  <span class="comment">//   &quot;Unordered accesses to a volatile location&quot;</span></span><br><span class="line">  <span class="keyword">while</span>((FM4_CRG-&gt;SCM_STR&amp;(<span class="number">0x02</span>&lt;&lt;<span class="number">5</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行前，替换系统的SystemInit() <br><br>系统不断复位 —&gt;&gt;&gt; 对比SystemInit;发现需要进行关看门狗;此外由于SystemInit()已实现160MHz配置，无需进行时钟设置</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> (HWWD_DISABLE)                                 <span class="comment">/* HW Watchdog Disable */</span></span></span><br><span class="line">  FM4_HWWDT-&gt;WDG_LCK = <span class="number">0x1ACCE551</span>u;                <span class="comment">/* HW Watchdog Unlock */</span></span><br><span class="line">  FM4_HWWDT-&gt;WDG_LCK = <span class="number">0xE5331AAE</span>u;</span><br><span class="line">  FM4_HWWDT-&gt;WDG_CTL = <span class="number">0u</span>;                         <span class="comment">/* HW Watchdog stop */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>FM4</category>
      </categories>
      <tags>
        <tag>ARM</tag>
        <tag>Cortex-M4</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p><img src="/posts/4a17b156/islands.jpeg" alt="风景"></p>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Hello World&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Trilib插件使用</title>
    <url>/posts/undefined/</url>
    <content><![CDATA[<p>Trilib插件为Unity3D的付费插件，可实现Unity程序运行状态下，从程序外部动态加载数模。支持FBX, OBJ, GLTF2, STL, PLY, 3MF以及ZIP等文件。</p>
<a id="more"></a>

<h1 id="1-安装-amp-编译"><a href="#1-安装-amp-编译" class="headerlink" title="1.安装&amp;编译"></a>1.安装&amp;编译</h1><ul>
<li>下载“TriLib - Model loader package.unitypackage”插件包，并使Unity3D导入插件;</li>
<li>编译运行时报错:TriLibConfigurePlugin.cs报错:没有”BuildTarget.Lumis”值,将其改为”BuildTarget.StandaloneWindows”，即可编译通过;</li>
</ul>
<blockquote>
<p>运行TriLib自带的AssetLoader场景，效果如下:</p>
</blockquote>
<p><img src="/posts/undefined/AssetLoader1.PNG" alt="动态加载FBX效果"></p>
<h1 id="2-源码分析"><a href="#2-源码分析" class="headerlink" title="2.源码分析"></a>2.源码分析</h1><h1 id="2-1-Sample-cs进行修改"><a href="#2-1-Sample-cs进行修改" class="headerlink" title="2.1 Sample.cs进行修改"></a>2.1 Sample.cs进行修改</h1><p>使用assetLoader类之间进行动态加载</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadFBXClick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">string</span> fbxPath = <span class="string">@&quot;C:\Users\Administrator\Documents\ABB\J4.FBX&quot;</span>;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> assetLoader = <span class="keyword">new</span> AssetLoader())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> assetLoaderOptions = AssetLoaderOptions.CreateInstance();</span><br><span class="line">                assetLoaderOptions.RotationAngles = <span class="keyword">new</span> Vector3(<span class="number">90f</span>, <span class="number">180f</span>, <span class="number">0f</span>);</span><br><span class="line">                assetLoaderOptions.AutoPlayAnimations = <span class="literal">true</span>;</span><br><span class="line">                assetLoaderOptions.UseOriginalPositionRotationAndScale = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">var</span> loadedGameObject = assetLoader.LoadFromFile(fbxPath, assetLoaderOptions);</span><br><span class="line">                loadedGameObject.transform.position = <span class="keyword">new</span> Vector3(<span class="number">128f</span>, <span class="number">0f</span>, <span class="number">0f</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(e.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>通过查看<code>AssetLoaderWindow.cs</code>，发现主要实现<code>AssetLoader</code>类调用</p>
<h1 id="2-2-AssetLoaderWindow-cs中LoadInternal"><a href="#2-2-AssetLoaderWindow-cs中LoadInternal" class="headerlink" title="2.2 AssetLoaderWindow.cs中LoadInternal"></a>2.2 AssetLoaderWindow.cs中LoadInternal</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Loads a model from the given filename, fibytes or browser files.</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;filename&quot;&gt;</span>Model filename.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fileBytes&quot;&gt;</span>Model file bytes.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;browserFilesCount&quot;&gt;</span>Browser filcount.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadInternal</span>(<span class="params"><span class="built_in">string</span> filename, <span class="built_in">byte</span>[] fileBytes = <span class="literal">null</span>, <span class="built_in">int</span> browserFilesCount = <span class="number">-1</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PreLoadSetup();</span><br><span class="line">    <span class="keyword">var</span> assetLoaderOptions = GetAssetLoaderOptions();</span><br><span class="line">    <span class="keyword">if</span> (!Async)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> assetLoader = <span class="keyword">new</span> AssetLoader())</span><br><span class="line">        &#123;</span><br><span class="line">            assetLoader.OnMetadataProcessed AssetLoader_OnMetadataProcessed;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (fileBytes != <span class="literal">null</span> &amp;&amp; fileBytes.Length &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    _rootGameObject = assetLoader.LoadFromMemoryWithTextures(fileBytes, FileUtils.GetFileExtension(filename), assetLoaderOptions, _rootGameObject);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(filename))</span><br><span class="line">                &#123;</span><br><span class="line">                    _rootGameObject = assetLoader.LoadFromFileWithTextures(filename, assetLoaderOptions);</span><br><span class="line">                &#125;<span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;File not selected&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                CheckForValidModel(assetLoader);</span><br><span class="line">            &#125;catch (Exception exception)</span><br><span class="line">            &#123;</span><br><span class="line">                HandleException(exception);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            FullPostLoadSetup();</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> assetLoader = <span class="keyword">new</span> AssetLoaderAsync())</span><br><span class="line">        &#123;</span><br><span class="line">            assetLoader.OnMetadataProcessed += AssetLoader_OnMetadataProcessed;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (fileBytes != <span class="literal">null</span> &amp;&amp; fileBytes.Length &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    assetLoader.LoadFromMemoryWithTextures(fileBytes, FileUtils.GetFileExtension(filename), assetLoaderOptions, <span class="literal">null</span>, <span class="built_in">delegate</span> (GameObject loadedGameObject)</span><br><span class="line">                    &#123;</span><br><span class="line">                                    CheckForValidModel(assetLoader);</span><br><span class="line">                                    _rootGameObject = loadedGameObject;</span><br><span class="line">                                    FullPostLoadSetup();</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(filename))</span><br><span class="line">                &#123;</span><br><span class="line">                    assetLoader.LoadFromFileWithTextures(filename, assetLoaderOptions, <span class="literal">null</span>, <span class="built_in">delegate</span> (GameObject loadedGameObject)</span><br><span class="line">                    &#123;</span><br><span class="line">                                    CheckForValidModel(assetLoader);</span><br><span class="line">                                    _rootGameObject = loadedGameObject;</span><br><span class="line">                                    FullPostLoadSetup();</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;File not selected&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;catch (Exception exception)</span><br><span class="line">            &#123;</span><br><span class="line">                HandleException(exception);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="2-3-从文件夹一次性加载多个文件"><a href="#2-3-从文件夹一次性加载多个文件" class="headerlink" title="2.3 从文件夹一次性加载多个文件"></a>2.3 从文件夹一次性加载多个文件</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadFromBrowserFiles</span>(<span class="params"><span class="built_in">int</span> filesCount</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LoadInternal(<span class="literal">null</span>, <span class="literal">null</span>, filesCount);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="3-修改Sample-cs代码，实现FBX动态加载"><a href="#3-修改Sample-cs代码，实现FBX动态加载" class="headerlink" title="3 修改Sample.cs代码，实现FBX动态加载"></a>3 修改Sample.cs代码，实现FBX动态加载</h1><p>通过取消加载的位姿配置操作，可实现FBX模型初始化装配坐标配置</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">GameObject</span>&gt; gameObjects</span> = <span class="keyword">new</span> List&lt;GameObject&gt;();</span><br><span class="line"><span class="function"><span class="keyword">public</span> GameObject <span class="title">DynamicLoadModel</span>(<span class="params"><span class="built_in">string</span> fbxPath</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GameObject result = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> assetLoader = <span class="keyword">new</span> AssetLoader())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> assetLoaderOptions = AssetLoaderOptions.CreateInstance();</span><br><span class="line">            assetLoaderOptions.AutoPlayAnimations = <span class="literal">true</span>;</span><br><span class="line">            assetLoaderOptions.UseOriginalPositionRotationAndScale = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">var</span> loadedGameObject = assetLoader.LoadFromFile(fbxPath, assetLoaderOptions);</span><br><span class="line">            result = loadedGameObject <span class="keyword">as</span> GameObject;</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(e.ToString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadFBXClick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> basePath = <span class="string">@&quot;C:\Users\Administrator\Documents\SFB\Resource\ABB\base.FBX&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> fbxPath1 = <span class="string">@&quot;C:\Users\Administrator\Documents\SFB\Resource\ABB\J1.FBX&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> fbxPath2 = <span class="string">@&quot;C:\Users\Administrator\Documents\SFB\Resource\ABB\J2.FBX&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> fbxPath3 = <span class="string">@&quot;C:\Users\Administrator\Documents\SFB\Resource\ABB\J3.FBX&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> fbxPath4 = <span class="string">@&quot;C:\Users\Administrator\Documents\SFB\Resource\ABB\J4.FBX&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> fbxPath5 = <span class="string">@&quot;C:\Users\Administrator\Documents\SFB\Resource\ABB\J5.FBX&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> fbxPath6 = <span class="string">@&quot;C:\Users\Administrator\Documents\SFB\Resource\ABB\J6.FBX&quot;</span>;</span><br><span class="line"></span><br><span class="line">    gameObjects.Add(<span class="keyword">this</span>.DynamicLoadModel(basePath));</span><br><span class="line">    gameObjects.Add(<span class="keyword">this</span>.DynamicLoadModel(fbxPath1));</span><br><span class="line">    gameObjects.Add(<span class="keyword">this</span>.DynamicLoadModel(fbxPath2));</span><br><span class="line">    gameObjects.Add(<span class="keyword">this</span>.DynamicLoadModel(fbxPath3));</span><br><span class="line">    gameObjects.Add(<span class="keyword">this</span>.DynamicLoadModel(fbxPath4));</span><br><span class="line">    gameObjects.Add(<span class="keyword">this</span>.DynamicLoadModel(fbxPath5));</span><br><span class="line">    gameObjects.Add(<span class="keyword">this</span>.DynamicLoadModel(fbxPath6));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>效果</p>
</blockquote>
<p><img src="/posts/undefined/AssetLoader2.PNG" alt="动态加载FBX效果"></p>
]]></content>
      <categories>
        <category>Unity3D</category>
      </categories>
      <tags>
        <tag>3D</tag>
        <tag>FBX模型动态加载</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity3D物理引擎</title>
    <url>/posts/undefined/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="6aa4fcc191448fda038fa56d17f11ba36efaf941e62b0d7d7d11f7f69de2258f"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Unity3D</category>
      </categories>
      <tags>
        <tag>3D</tag>
        <tag>物理引擎</tag>
      </tags>
  </entry>
</search>
